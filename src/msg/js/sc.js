// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sc');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Agiunghe unu cumentu";
Blockly.Msg.AM412 = "PIR - AM412";  // untranslated
Blockly.Msg.ANALOG_JOYSTICK = "Analog joystick";  // untranslated
Blockly.Msg.ANALOG_PINS = "analog pin";  // untranslated
Blockly.Msg.AS = "as";  // untranslated
Blockly.Msg.BAND = "band";  // untranslated
Blockly.Msg.BITLOGIC_LSB_HELPURL = "";  // untranslated
Blockly.Msg.BITLOGIC_LSB_TITLE = "LSB %1";  // untranslated
Blockly.Msg.BITLOGIC_LSB_TOOLTIP = "Returns the LSB (less significant byte) of the input.";  // untranslated
Blockly.Msg.BITLOGIC_MSB_HELPURL = "";  // untranslated
Blockly.Msg.BITLOGIC_MSB_TITLE = "MSB %1";  // untranslated
Blockly.Msg.BITLOGIC_MSB_TOOLTIP = "Returns the MSB (most significant byte) of the input.";  // untranslated
Blockly.Msg.BITSOFRESOLUTION = "bits of resolution";  // untranslated
Blockly.Msg.BITWISE_HELPURL = "";  // untranslated
Blockly.Msg.BITWISE_TOOLTIP = "";  // untranslated
Blockly.Msg.CANCEL = "Cancel";  // untranslated
Blockly.Msg.CAN_EXT = "extended";  // untranslated
Blockly.Msg.CAN_FRAME_ALREADY_EXISTS = "An frame named '%1' already exists.";  // untranslated
Blockly.Msg.CAN_FRAME_CANCEL = "Cancel";  // untranslated
Blockly.Msg.CAN_FRAME_CANNOT_REMOVE = "This frame cannot remove.";  // untranslated
Blockly.Msg.CAN_FRAME_CANNOT_RENAME = "This frame cannot rename.";  // untranslated
Blockly.Msg.CAN_FRAME_CREATE = "Creeate frame ...";  // untranslated
Blockly.Msg.CAN_FRAME_NAME = "Frame name";  // untranslated
Blockly.Msg.CAN_GET = "get";  // untranslated
Blockly.Msg.CAN_GET_D0 = "data 0";  // untranslated
Blockly.Msg.CAN_GET_D1 = "data 1";  // untranslated
Blockly.Msg.CAN_GET_D2 = "data 2";  // untranslated
Blockly.Msg.CAN_GET_D3 = "data 3";  // untranslated
Blockly.Msg.CAN_GET_D4 = "data 4";  // untranslated
Blockly.Msg.CAN_GET_D5 = "data 5";  // untranslated
Blockly.Msg.CAN_GET_D6 = "data 6";  // untranslated
Blockly.Msg.CAN_GET_D7 = "data 7";  // untranslated
Blockly.Msg.CAN_GET_FROM_FRAME = "from";  // untranslated
Blockly.Msg.CAN_GET_HELPURL = "Get a field value from a CAN frame.";  // untranslated
Blockly.Msg.CAN_GET_IDENTIFIER = "identifier";  // untranslated
Blockly.Msg.CAN_GET_LEN = "length";  // untranslated
Blockly.Msg.CAN_GET_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_GET_TO_FRAME = "to";  // untranslated
Blockly.Msg.CAN_GET_TYPE = "type";  // untranslated
Blockly.Msg.CAN_READ = "read from ";  // untranslated
Blockly.Msg.CAN_READ_HELPURL = "";  // untranslated
Blockly.Msg.CAN_READ_TOOLTIP = "Read a frame from the CAN bus.";  // untranslated
Blockly.Msg.CAN_SET = "set";  // untranslated
Blockly.Msg.CAN_SET_D0 = "data 0";  // untranslated
Blockly.Msg.CAN_SET_D1 = "data 1";  // untranslated
Blockly.Msg.CAN_SET_D2 = "data 2";  // untranslated
Blockly.Msg.CAN_SET_D3 = "data 3";  // untranslated
Blockly.Msg.CAN_SET_D4 = "data 4";  // untranslated
Blockly.Msg.CAN_SET_D5 = "data 5";  // untranslated
Blockly.Msg.CAN_SET_D6 = "data 6";  // untranslated
Blockly.Msg.CAN_SET_D7 = "data 7";  // untranslated
Blockly.Msg.CAN_SET_FILTER = "set filter for";  // untranslated
Blockly.Msg.CAN_SET_FILTER_FROM = "from";  // untranslated
Blockly.Msg.CAN_SET_FILTER_HELPURL = "Set a filter. Only messages that it's id match the filter are accepted.";  // untranslated
Blockly.Msg.CAN_SET_FILTER_TO = "to";  // untranslated
Blockly.Msg.CAN_SET_FILTER_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_SET_HELPURL = "Set a frame field to an specified value.";  // untranslated
Blockly.Msg.CAN_SET_IDENTIFIER = "identifier";  // untranslated
Blockly.Msg.CAN_SET_LEN = "length";  // untranslated
Blockly.Msg.CAN_SET_SPEED = "set speed for";  // untranslated
Blockly.Msg.CAN_SET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.CAN_SET_SPEED_TOOLTIP = "Set speed for CAN bus.";  // untranslated
Blockly.Msg.CAN_SET_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_SET_TO_FRAME = "to frame";  // untranslated
Blockly.Msg.CAN_SET_TO_VALUE = "value";  // untranslated
Blockly.Msg.CAN_SET_TYPE = "type";  // untranslated
Blockly.Msg.CAN_STD = "standard";  // untranslated
Blockly.Msg.CAN_TYPE_HELPURL = "";  // untranslated
Blockly.Msg.CAN_TYPE_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_WRITE = "write to ";  // untranslated
Blockly.Msg.CAN_WRITE_FRAME = "frame";  // untranslated
Blockly.Msg.CAN_WRITE_HELPURL = "Send a frame to the CAN bus.";  // untranslated
Blockly.Msg.CAN_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Muda valori:";
Blockly.Msg.CLEAN_UP = "Lìmpia is brocus";
Blockly.Msg.CLOSE = "Close";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Serra e stringi Brocus";
Blockly.Msg.COLLAPSE_BLOCK = "Serra e stringi Brocu";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "colori 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "colori 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "raportu";
Blockly.Msg.COLOUR_BLEND_TITLE = "mestura";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Amestura duus coloris cun unu raportu (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Scebera unu colori de sa tauledda.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "Unu colori a brítiu";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Scebera unu colori a brítiu.";
Blockly.Msg.COLOUR_RGB_BLUE = "blue";
Blockly.Msg.COLOUR_RGB_GREEN = "birdi";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "arrùbiu";
Blockly.Msg.COLOUR_RGB_TITLE = "colora cun";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Cuncorda unu colori cun su tanti de arrubiu, birdi, e blue. Totu is valoris depint essi intra 0 e 100.";
Blockly.Msg.CONFIGURE = "Configure";  // untranslated
Blockly.Msg.CONFIGURE_LORA = "Configure LoRa...";  // untranslated
Blockly.Msg.CONFIGURE_MQTT = "Configure client...";  // untranslated
Blockly.Msg.CONFIGURE_WIFI = "Configure...";  // untranslated
Blockly.Msg.CONFIGURE_WIFI_STA = "Configure WIFI station...";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "sàrtiat a foras de sa lòriga";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "sighit cun su repicu afatànti";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bessit de sa lòriga.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sartiat su chi abarrat de sa loriga, e sighit cun su repicu afatànti.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Amonestu: Custu brocu ddu podis ponni sceti aintru de una lòriga.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "po dònnia item %1 in lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Po dònnia item in sa lista, ponit sa variàbili '%1' pari a s'item, e tandu fait pariga de cumandus.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "po %1 de %2 fintzas %3 a passus de %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Fait pigai a sa variàbili \"%1\" i valoris de su primu numeru a s'urtimu, a su passu impostau e fait su brocu.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Aciungi una cunditzioni a su brocu si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Aciungi una urtima cunditzioni piga-totu a su brocu si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinuncas";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinuncas si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si su valori est berus, tandu fait pariga de cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si su valori est berus, tandu fai su primu brocu de is cumandus. Sinuncas, fai su segundu brocu de is cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si su primu valori est beridadi, tandu fai su primu brocu de is cumandus. Sinuncas, si su segundu valori est beridadi, fai su segundu brocu de is cumandus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si su primu valori est berus, tandu fai su primu brocu de is cumandus. Sinuncas, si su segundu valori est berus, fai su segundu brocu de is cumandus. Si mancu unu valori est berus, tandu fai s'urtimu brocu de is cumandus.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "fai";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repiti %1 bortas";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Fait pariga de cumandus prus bortas.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repiti fintzas";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repiti interis";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Interis su valori est frassu, tandu fai pariga de cumandus.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Interis su valori est berus, tandu fai pariga de cumandus.";
Blockly.Msg.CPU_SLEEP = "sleep CPU";  // untranslated
Blockly.Msg.CREATE_MQTT = "Configure MQTT client...";  // untranslated
Blockly.Msg.DEFAULT_CAN_FRAME = "frame";  // untranslated
Blockly.Msg.DEFAULT_EVENT = "event";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Scancellu su %1 de is brocus?";
Blockly.Msg.DELETE_BLOCK = "Fùlia Blocu";
Blockly.Msg.DELETE_CAN_FRAME = "Delete the '%1' frame";  // untranslated
Blockly.Msg.DELETE_EVENT = "Delete the '%1' event";  // untranslated
Blockly.Msg.DELETE_FILE = "Delete";  // untranslated
Blockly.Msg.DELETE_FILE_CONFIRM = "Do you want to delete %1?";  // untranslated
Blockly.Msg.DELETE_SENSOR = "Delete the '%1' sensor";  // untranslated
Blockly.Msg.DELETE_VARIABLE = "Delete the '%1' variable";  // untranslated
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Delete %1 uses of the '%2' variable?";  // untranslated
Blockly.Msg.DELETE_X_BLOCKS = "Fulia %1 Blocus";
Blockly.Msg.DISABLE_BLOCK = "Disabìlita Blocu";
Blockly.Msg.DO = "do";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Dùplica";
Blockly.Msg.DUTY = "and duty";  // untranslated
Blockly.Msg.EDIT_CAN_FRAME_TITLE = "Edit frame ...";  // untranslated
Blockly.Msg.EDIT_EVENT_TITLE = "Edit event ...";  // untranslated
Blockly.Msg.EDIT_SENSOR = "Edit sensor ...";  // untranslated
Blockly.Msg.EDIT_SENSOR_TITLE = "Edit sensor ...";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Abìlita Blocu";
Blockly.Msg.ERROR = "Error";  // untranslated
Blockly.Msg.EVENT_ALREADY_EXISTS = "An event named '%1' already exists.";  // untranslated
Blockly.Msg.EVENT_BROADCAST = "broadcast";  // untranslated
Blockly.Msg.EVENT_BROADCAST_AND_WAIT = "and wait";  // untranslated
Blockly.Msg.EVENT_BROADCAST_AND_WAIT_TOOLTIP = "Sends a broadcast, activating When I Receive blocks that are set to that broadcast, and pauses until all scripts activated by the broadcast are completed";  // untranslated
Blockly.Msg.EVENT_BROADCAST_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_BROADCAST_TOOLTIP = "Sends a broadcast, activating When I Receive blocks that are set to that broadcast.";  // untranslated
Blockly.Msg.EVENT_CANCEL = "Cancel";  // untranslated
Blockly.Msg.EVENT_CANNOT_REMOVE = "This event cannot remove.";  // untranslated
Blockly.Msg.EVENT_CANNOT_RENAME = "This event cannot rename.";  // untranslated
Blockly.Msg.EVENT_CREATE = "Creeate event ...";  // untranslated
Blockly.Msg.EVENT_EVERY = "every";  // untranslated
Blockly.Msg.EVENT_EVERY_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_EVERY_TOOLTIP = "This block is invoked at regular time intervals.";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED = "is being processed?";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_P = "";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_NAME = "Event name";  // untranslated
Blockly.Msg.EVENT_THREAD_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_THREAD_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS = "when board starts";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_TOOLTIP = "This block is invoked at board startup. Tipically is used for initialize other blocks, and broadcast events.";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_CHANGES = "changes at";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN = "when digital pin";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE = "when I receive";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME = "when I receive a LoRa frame";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_TOOLTIP = "This block is invoked when a LoRa frame is received.";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_TOOLTIP = "This block will be invoked once the specified broadcast has been sent by an other script.";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED = "when Wi-Fi is connected";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED_TOOLTIP = "This block is invoked when the Wi-Fi connected.";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED = "when Wi-Fi is disconnected";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED_TOOLTIP = "This block is invoked when the Wi-Fi disconnected.";  // untranslated
Blockly.Msg.EXPAND_ALL = "Aberi Brocus";
Blockly.Msg.EXPAND_BLOCK = "Aberi Brocu";
Blockly.Msg.EXTERNAL_INPUTS = "Intradas esternas";
Blockly.Msg.FALSE = "false";  // untranslated
Blockly.Msg.FILE_DELETED = "%1 has been deleted.";  // untranslated
Blockly.Msg.FOREVER = "forever";  // untranslated
Blockly.Msg.FREQUENCY = "to frequency";  // untranslated
Blockly.Msg.GPS = "NMEA GPS";  // untranslated
Blockly.Msg.HALL_FLOW = "Flow by hall effect";  // untranslated
Blockly.Msg.HALL_SWITCH = "Hall effect switch";  // untranslated
Blockly.Msg.HELP = "Agiudu";
Blockly.Msg.HERTZS = "hertzs";  // untranslated
Blockly.Msg.HIGH = "high";  // untranslated
Blockly.Msg.IN = "in";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Intradas in lìnia";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INPUT_PINS = "input pin";  // untranslated
Blockly.Msg.INTERNAL_HALL = "Internal hall effect sensor";  // untranslated
Blockly.Msg.Khz = "Khz";  // untranslated
Blockly.Msg.LINEAR_POT = "Linear pot";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "fait una lista buida";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Torrat una lista, de longària 0, chena records de datus.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "fait una lista cun";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Acciungi unu item a sa lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Fait una lista cun calisiollat numeru de items.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primu";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# de sa fini";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "piga";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "piga e fùlia";
Blockly.Msg.LISTS_GET_INDEX_LAST = "urtimu";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "a brìtiu (random)";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fùlia";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Torrat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Torrat s'elementu de su postu inditau de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Torrat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Torrat un'elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fùliat e torrat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Fùliat e torrat s'elementu de su postu inditau de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fùliat e torrat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fùliat e torrat un'elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fùliat su primu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Fùliat s'elementu de su postu inditau de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fùliat s'urtimu elementu de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fùliat unu elementu a brìtiu de una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "a # de sa fini";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "fintzas a #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "a s'urtimu";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "bogandi suta-lista de su primu";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "bogandi suta-lista de # de sa fini.";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "bogandi suta-lista de #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Fait una copia de sa parti inditada de sa lista.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 est po s'urtimu elementu.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 est po su primu elementu.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "circa prima ocasioni de s'item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "circa urtima ocasioni de s'item";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Torrat s'indixi de sa primu/urtima ocasioni de s'item in sa lista. Torrat %1 si s'item non s'agatat.";
Blockly.Msg.LISTS_INLIST = "in lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est buidu";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Torrat berus si sa lista est buida.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longària de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Torrat sa longària de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "fait una lista cun item %1 repitiu %2 bortas";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Fait una lista cun unu numeru giau repitiu su tanti de is bortas inditadas.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "a";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "inserta a";
Blockly.Msg.LISTS_SET_INDEX_SET = "imposta";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insertat s'elementu a su cumintzu de sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Insertat s'elementu in su postu inditau in una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Aciungit s'elementu a sa fini de sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Aciungit s'elementu a brítiu in sa lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Impostat su primu elementu in una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Impostat s'elementu in su postu inditau de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Impostat s'urtimu elementu in una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Impostat unu elementu random in una lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "fai una lista de unu testu";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "fai unu testu de una lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Auni una lista de testus in d-unu sceti, ponendi separadoris.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividi su testu in un'elencu de testus, firmendi po dònnia separadori.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "cun  separadori";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "frassu";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Torrat berus o frassu.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "berus";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Torrat berus si is inputs funt unu uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Torrat berus si su primu input est prus mannu de s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Torrat berus si su primu input est prus mannu o uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Torrat berus si su primu input est prus piticu de s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Torrat berus si su primu input est prus piticu o uguali a s'àteru.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Torrat berus si is inputs non funt unu uguali a s'àteru.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "non %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Torrat berus si s'input est frassu. Torrat frassu si s'input est berus.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Torrat null.";
Blockly.Msg.LOGIC_OPERATION_AND = "and";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "or";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Torrat berus si ambos is inputs funt berus.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Torrat berus si assumancu unu de is inputs est berus.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "cumpròa";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si frassu";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si berus";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "‎Cumproa sa cunditzioni in 'cumproa'. Si sa cunditzioni est berus, torrat su valori 'si berus'; sinuncas torrat su valori 'si frassu'.";
Blockly.Msg.LORA_ACTIVATION = "Activation";  // untranslated
Blockly.Msg.LORA_ACTIVATION_DATA = "Node activation data:";  // untranslated
Blockly.Msg.LORA_ADR = "Adaptative Data Rate";  // untranslated
Blockly.Msg.LORA_BAND = "Band";  // untranslated
Blockly.Msg.LORA_CONFIG_RETX = "Retransmissions";  // untranslated
Blockly.Msg.LORA_CONFIG_TITLE = "LoRa WAN configuration ...";  // untranslated
Blockly.Msg.LORA_CONFIRMED = "confirmed";  // untranslated
Blockly.Msg.LORA_DR = "Data Rate";  // untranslated
Blockly.Msg.LORA_FRAME = " frame to port ";  // untranslated
Blockly.Msg.LORA_FREQ = "Frequency";  // untranslated
Blockly.Msg.LORA_GATEWAY = "1-channel gateway";  // untranslated
Blockly.Msg.LORA_GET_ABP_DATA_HELP = "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an ABP node. If you want to use it, please click the 'Get data' button to get the personalization data.";  // untranslated
Blockly.Msg.LORA_GET_DATA = "Get data ...";  // untranslated
Blockly.Msg.LORA_GET_OTAA_DATA_HELP = "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an OTAA node. If you want to use it, please click the 'Get data' button to get the activation data.";  // untranslated
Blockly.Msg.LORA_GET_PAYLOAD = "get payload from received frame";  // untranslated
Blockly.Msg.LORA_GET_PORT = "get port from received frame";  // untranslated
Blockly.Msg.LORA_INVALID = "Invalid %1 value.";  // untranslated
Blockly.Msg.LORA_JOIN = "join";  // untranslated
Blockly.Msg.LORA_NODE = "Node";  // untranslated
Blockly.Msg.LORA_PAYLOAD = " with payload ";  // untranslated
Blockly.Msg.LORA_PERSONALIZATION_DATA = "Node personalization data:";  // untranslated
Blockly.Msg.LORA_ROLE = "Role";  // untranslated
Blockly.Msg.LORA_ROLE_GATEWAY_TITLE = "Gateway configuration:";  // untranslated
Blockly.Msg.LORA_ROLE_NODE_TITLE = "Basic node configuration:";  // untranslated
Blockly.Msg.LORA_SET_ADR = "set adaptative data rate to";  // untranslated
Blockly.Msg.LORA_SET_APPEUI = "set AppEui to";  // untranslated
Blockly.Msg.LORA_SET_APPKEY = "set AppKey to";  // untranslated
Blockly.Msg.LORA_SET_APPSKEY = "set setAppsKey to";  // untranslated
Blockly.Msg.LORA_SET_AR = "set automatic reply to";  // untranslated
Blockly.Msg.LORA_SET_DEVADDR = "set DevAddr to";  // untranslated
Blockly.Msg.LORA_SET_DEVEUI = "set DevEui to";  // untranslated
Blockly.Msg.LORA_SET_DR = "set data rate to";  // untranslated
Blockly.Msg.LORA_SET_NWKSKEY = "set NwksKey to";  // untranslated
Blockly.Msg.LORA_SET_RETX = "set retransmissions to";  // untranslated
Blockly.Msg.LORA_START_GW = "start gateway";  // untranslated
Blockly.Msg.LORA_STOP_GW = "stop gateway";  // untranslated
Blockly.Msg.LORA_TX = "transmit ";  // untranslated
Blockly.Msg.LORA_UNCONFIRMED = "unconfirmed";  // untranslated
Blockly.Msg.LOW = "low";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Torrat sa summa de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Torrat su cuotzienti de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Torrat sa diferèntzia de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Torrat su produtu de is duus nùmerus.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Torrat su primu numeru artziau a sa potenza de su segundu nùmeru.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "muda %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Aciungi unu numeru a sa variabili '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Torrat una de is costantis comunas: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), o ∞ (infiniu).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "custringi %1 de %2 a %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Custringi unu numeru aintru de is liminaxus giaus (cumprendius).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "fait a ddu dividi po";
Blockly.Msg.MATH_IS_EVEN = "est paris";
Blockly.Msg.MATH_IS_NEGATIVE = "est negativu";
Blockly.Msg.MATH_IS_ODD = "est dísparu";
Blockly.Msg.MATH_IS_POSITIVE = "est positivu";
Blockly.Msg.MATH_IS_PRIME = "est primu";
Blockly.Msg.MATH_IS_TOOLTIP = "Cumprova si unu numeru est paris, dìsparis, primu, intreu, positivu, negativu o si fait a ddu dividi po unu numeru giau. Torrat berus o frassu.";
Blockly.Msg.MATH_IS_WHOLE = "est intreu";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "arrestu de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Torrat s'arrestu de sa divisioni de duus numerus.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Unu numeru";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "mèdia de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "massimu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "unu item a brìtiu de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "deviadura standard de sa lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma sa lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Torrat sa mèdia (aritimètica) de is valoris de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Torrat su numeru prus mannu de sa lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Torrat su numeru medianu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Torrat su numeru prus piticu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Torrat una lista de is itams prus frecuentis de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Torrat unu item a brìtiu de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Torrat sa deviadura standard de sa lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Torrat sa suma de totu is numerus de sa lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "una fratzioni a brìtiu";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Torrat una fratzioni a brìtiu intra 0.0 (cumpresu) e 1.0 (bogau).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "numeru intreu a brítiu de %1 a %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Torrat unu numeru intreu a brìtiu intra duus nùmerus giaus (cumpresus).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arretunda";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arretunda faci a bàsciu.";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "Arretunda faci a susu";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arretunda unu numeru faci a susu o faci a bàsciu.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "assolutu";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "arraxina cuadra";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Torrat su valori assolútu de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Torrat (e) a sa potèntzia de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Torrat su logaritmu naturali de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Torrat su logaritmu a basi 10 de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Torrat su valori negau de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Torrat (10) a sa potèntzia de unu numeru.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Torrat s'arraxina cuadra de unu numeru.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Torrat su arccosinu de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Torrat su arcsinu de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Torrat su arctangenti de unu numeru.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Torrat su cosinu de unu gradu (no radianti).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Torrat su sinu de unu gradu (no radianti).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Torrat sa tangenti de unu gradu (no radianti).";
Blockly.Msg.MHZ = "MHz";  // untranslated
Blockly.Msg.MQTT_CONFIG_TITLE = "Configure MQTT client ...";  // untranslated
Blockly.Msg.MQTT_GET_DATA = "Get data ...";  // untranslated
Blockly.Msg.MQTT_GET_DATA_HELP = "The Whitecat IDE offer to its users a MQTT broquer for testing purposes. If you want to use it, please click the 'Get data' button to get the connection data.";  // untranslated
Blockly.Msg.MQTT_GET_LEN = "get length of the received message";  // untranslated
Blockly.Msg.MQTT_GET_PAYLOAD = "get the received message";  // untranslated
Blockly.Msg.MQTT_INVALID = "Invalid value %1.";  // untranslated
Blockly.Msg.MQTT_PUBLISH = "publish";  // untranslated
Blockly.Msg.MQTT_QOS = "with";  // untranslated
Blockly.Msg.MQTT_SUBSCRIBE = "when a message is received to topic";  // untranslated
Blockly.Msg.MQTT_TO_TOPIC = "to topic";  // untranslated
Blockly.Msg.NEW_CAN_FRAME = "New frame ...";  // untranslated
Blockly.Msg.NEW_CAN_FRAME_TITLE = "New frame ...";  // untranslated
Blockly.Msg.NEW_EVENT = "New event ...";  // untranslated
Blockly.Msg.NEW_EVENT_TITLE = "New event ...";  // untranslated
Blockly.Msg.NEW_SENSOR = "Create new sensor...";  // untranslated
Blockly.Msg.NEW_SENSOR_SELECT_ONE = "(select one)";  // untranslated
Blockly.Msg.NEW_SENSOR_TITLE = "New sensor ...";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Variabili noa...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nòmini de sa variabili noa:";
Blockly.Msg.NO = "No";  // untranslated
Blockly.Msg.ONLY_ALLOWED_WITHIN_BLOCK = "Warning: This block may only be used within a \"%1\" block";  // untranslated
Blockly.Msg.ON_EVERY_RECEIVED_LORA_FRAME = "a LoRa WAN frame is received";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.OUTPUT_PINS = "output pin";  // untranslated
Blockly.Msg.PERCENT = "%";  // untranslated
Blockly.Msg.PING28015 = "PING))) 28015";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permiti decraratzionis";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Arròllia sa funtzione '%1' cuncordada dae s'impitadore.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Arròllia sa funtzione '%1' cuncordada dae s'impitadore e imprea s'output suu.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "cun";
Blockly.Msg.PROCEDURES_CREATE_DO = "Ingenerau'%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "fait calincuna cosa";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "po";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Fait una funtzioni chena output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "torrat";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Fait una funtzioni cun output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Amonestu: Custa funtzioni tenit parametrus duplicaus.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Marca sa definitzioni de funtzioni.";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si unu valori est berus, tandu torrat unu segundu valori.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Amonestu: Custu brocu ddu podis ponni sceti aintru de una funtzioni.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nomini input:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Aciungi un input a sa funtzioni.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Aciungi, fùlia, o assenta is inputs a custa funtzioni.";
Blockly.Msg.PUSH_SWITCH = "Push switch";  // untranslated
Blockly.Msg.PWM_PINS = "pwm pin";  // untranslated
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REL_ROT_ENCODER = "Relative rotary encoder";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Fùlia unu cumentu";
Blockly.Msg.REMOVE_SENSOR = "Remove sensor ...";  // untranslated
Blockly.Msg.RENAME_CAN_FRAME = "Rename frame...";  // untranslated
Blockly.Msg.RENAME_EVENT = "Rename event...";  // untranslated
Blockly.Msg.RENAME_SENSOR = "Renane sensor ...";  // untranslated
Blockly.Msg.RENAME_VARIABLE = "Muda nòmini a variabili...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "A is variabilis '%1' muda nòmini a:";
Blockly.Msg.S2Y0A21 = "Sharp 2Y0A21";  // untranslated
Blockly.Msg.SENSOR = "Sensor";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE = "acquire data from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE_TOOLTIP = "Acquire data from sensor.";  // untranslated
Blockly.Msg.SENSOR_ALREADY_EXISTS = "A sensor named '%1' already exists.";  // untranslated
Blockly.Msg.SENSOR_ATTACH = "attach %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_ATTACH_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_ATTACH_TOOLTIP = "Attach sensor to its hardware interface.";  // untranslated
Blockly.Msg.SENSOR_CANCEL = "Cancel";  // untranslated
Blockly.Msg.SENSOR_CATEGORY = "Category";  // untranslated
Blockly.Msg.SENSOR_CREATE = "Create";  // untranslated
Blockly.Msg.SENSOR_DEFAULT_NAME = "sensor";  // untranslated
Blockly.Msg.SENSOR_DEVICE_ADDR = "Adress on bus";  // untranslated
Blockly.Msg.SENSOR_DEVICE_ID = "Identifier on bus";  // untranslated
Blockly.Msg.SENSOR_DISCOVER = "Discover on bus";  // untranslated
Blockly.Msg.SENSOR_INT_ATTACHED = "%1 attached at";  // untranslated
Blockly.Msg.SENSOR_NAME = "Name in the workspace";  // untranslated
Blockly.Msg.SENSOR_READ1 = "read ";  // untranslated
Blockly.Msg.SENSOR_READ2 = " from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_READ_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_READ_TOOLTIP = "Read data from sensor.";  // untranslated
Blockly.Msg.SENSOR_REMOVE_CONFIRM = "Do you want to remove %1 sensor from your project?";  // untranslated
Blockly.Msg.SENSOR_SET1 = "set ";  // untranslated
Blockly.Msg.SENSOR_SET2 = " with value ";  // untranslated
Blockly.Msg.SENSOR_SET3 = " for %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_SET_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_SET_TOOLTIP = "Set configuration options for sensor.";  // untranslated
Blockly.Msg.SENSOR_WHEN1 = "when ";  // untranslated
Blockly.Msg.SENSOR_WHEN2 = " changes from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_WHEN_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_WHEN_TOOLTIP = "This block is invoked when the magnitude changes.";  // untranslated
Blockly.Msg.SERVO_ATTACH = "attach servo on pin";  // untranslated
Blockly.Msg.SERVO_ATTACH_HELPURL = "";  // untranslated
Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Attach a servo to a pin.";  // untranslated
Blockly.Msg.SERVO_CALIBRATE = "Calibrate ...";  // untranslated
Blockly.Msg.SERVO_MOVE = "move servo on pin";  // untranslated
Blockly.Msg.SERVO_MOVE_DEGREES = "degrees";  // untranslated
Blockly.Msg.SERVO_MOVE_HELPURL = "";  // untranslated
Blockly.Msg.SERVO_MOVE_TOOLTIP = "Moves the servo attached on pin by a number of degrees. If degrees are > 0 movement is clockwise, and if movement is < 0 movement is counterclockwise";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "acciungi su testu";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Aciungit testu a sa variàbili '%1'.";
Blockly.Msg.TEXT_CATCH_TITLE = "catch";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúdu";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "cun Primu lìtera a Mauschínu";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a mauschínu";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Torrat una copia de su testu inditau mudendi mauschínu/minúdu.";
Blockly.Msg.TEXT_CHARAT_FIRST = "piga sa prima lìtera";
Blockly.Msg.TEXT_CHARAT_FROM_END = "piga sa lìtera # de sa fini";
Blockly.Msg.TEXT_CHARAT_FROM_START = "piga sa lìtera #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in su testu";
Blockly.Msg.TEXT_CHARAT_LAST = "piga s'urtima lìtera";
Blockly.Msg.TEXT_CHARAT_RANDOM = "piga una lìtera a brìtiu";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Torrat sa lìtera de su postu giau.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Acciungi unu item a su testu.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "auni a pari";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Aciungi, fùlia, o assenta is partis po torrai a sètiu custu brocu de testu.";
Blockly.Msg.TEXT_FINALLY = "finally";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "a sa lìtera # de sa fini";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "a sa lìtera #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "a s'urtima lìtera";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in su testu";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "piga suta-stringa de sa primu lìtera";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "piga suta-stringa de sa lìtera # fintzas a fini";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "piga suta-stringa de sa lìtera #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Torrat su testu inditau.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "in su testu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "circa prima ocasioni de su testu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "circa urtima ocasioni de su testu";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Torrat s'indixi de sa primu/urtima ocasioni de su primu testu in su segundu testu. Torrat %1 si su testu no ddu agatat.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est buidu";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Torrat berus si su testu giau est buidu.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "scri testu cun";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Fait unu testu ponendi a pari parigas de items.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longària de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Torrat su numeru de lìteras (cun is spàtzius) in su testu giau.";
Blockly.Msg.TEXT_PACK_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE1 = "pack hex string";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE2 = "with";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE3 = "to";  // untranslated
Blockly.Msg.TEXT_PACK_TOOLTIP = "Pack a set of values into an hex's string representation.";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "scri %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Scri su testu, numeru o àteru valori.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Pregonta unu nùmeru a s'impitadore.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Pregonta testu a s'impitadore.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "pregonta po unu numeru";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "pregonta po su testu";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una lìtera, paràula, o linia de testu.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "bogat spàtzius de ambus càbudus de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "bogat spàtzius de su càbudu de manca de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "bogat spàtzius de su càbudu de dereta de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Torrat una copia de su testu bogaus is spàtzius de unu o de ambus is càbudus.";
Blockly.Msg.TEXT_TRY_CATCHED = "is catched";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_ERROR = "when error";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_OTHER_ERROR = "when other errors catched";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_RAISE_AGAIN = "raise catched error again";  // untranslated
Blockly.Msg.TEXT_TRY_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_TRY_TITLE = "try";  // untranslated
Blockly.Msg.TEXT_TRY_TOOLTIP = "Try to execute a set of statements and eventualy catch the errors without stop program.";  // untranslated
Blockly.Msg.TEXT_UNPACK_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE1 = "unpack hex string";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE2 = "to";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE3 = "from";  // untranslated
Blockly.Msg.TEXT_UNPACK_TOOLTIP = "Unpack a set of values encoded into an hex's string representation.";  // untranslated
Blockly.Msg.THERMISTOR = "10K thermistor";  // untranslated
Blockly.Msg.THREAD_RETURN = "return id";  // untranslated
Blockly.Msg.TILT_SWITCH = "Tilt switch";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Oe";
Blockly.Msg.TRUE = "true";  // untranslated
Blockly.Msg.UNARY_BITWISE_HELPURL = "";  // untranslated
Blockly.Msg.UNARY_BITWISE_TOOLTIP = "";  // untranslated
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.UPDATE = "Update";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "item";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Fait 'imposta %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Torrat su valori de custa variabili.";
Blockly.Msg.VARIABLES_LOCAL = "local variable %1";  // untranslated
Blockly.Msg.VARIABLES_LOCAL_TOOLTIP = "Sets the scope for this variable to local.";  // untranslated
Blockly.Msg.VARIABLES_SET = "imposta %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Fait 'piga %1'";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Imposta custa variabili uguali a s'input.";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "A variable named '%1' already exists.";  // untranslated
Blockly.Msg.WARNING_CAN_INVALID_DATA = "Invalid data. Must be >= 0 and <= 255.";  // untranslated
Blockly.Msg.WARNING_CAN_INVALID_LEN = "Invalid length. Must be >= 0 and <= 8.";  // untranslated
Blockly.Msg.WARNING_CAN_INVALID_TYPE = "Invalid frame type";  // untranslated
Blockly.Msg.WARNING_CATCH_ERROR_NOT_ALLOWED_HERE = "Warning: This block may only be used within a 'when error is catched' block.";  // untranslated
Blockly.Msg.WARNING_EVENTS_CAN_ONLY_PROCESSED_IN_ONE_EVENT_BLOCK = "Warning: events can only be processed in one event block.";  // untranslated
Blockly.Msg.WARNING_NOT_IN_HAT_BLOCK = "Warning: this block may only be used within a hat block.";  // untranslated
Blockly.Msg.WARNING_ONLY_ONE_INSTANCE_ALLOWED = "Warning: only one instance of this block is allowed.";  // untranslated
Blockly.Msg.WARNING_RAISE_ERROR_AGAIN_NOT_ALLOWED_HERE = "Warning: This block may only be used within a 'try catch finally' block in its catch part.";  // untranslated
Blockly.Msg.WIFI_CONFIG_TITLE = "Wi-Fi contiguration ...";  // untranslated
Blockly.Msg.WIFI_INVALID = "Invalid %1 value.";  // untranslated
Blockly.Msg.WIFI_START = "start Wi-Fi";  // untranslated
Blockly.Msg.WIFI_STOP = "stop Wi-Fi";  // untranslated
Blockly.Msg.WIFI_TYPE = "Type";  // untranslated
Blockly.Msg.WITH = "with";  // untranslated
Blockly.Msg.YES = "Yes";  // untranslated
Blockly.Msg.air_quality = "Air quality";  // untranslated
Blockly.Msg.any = "any";  // untranslated
Blockly.Msg.any_edge = "any edge";  // untranslated
Blockly.Msg.configureLora = "configure LoRa using ";  // untranslated
Blockly.Msg.configureanalogpin = "configure analog pin";  // untranslated
Blockly.Msg.configuredigitalpin = "configure digital pin";  // untranslated
Blockly.Msg.distance = "Distance";  // untranslated
Blockly.Msg.for = "for";  // untranslated
Blockly.Msg.geopos = "Geographic position";  // untranslated
Blockly.Msg.getanalogpin = "get analog pin value";  // untranslated
Blockly.Msg.getdigitalpin = "get digital pin value";  // untranslated
Blockly.Msg.getexternalanalogchannel = "get analog value from";  // untranslated
Blockly.Msg.high_level = "high level";  // untranslated
Blockly.Msg.humidity = "Humidity";  // untranslated
Blockly.Msg.hz = "hz";  // untranslated
Blockly.Msg.i2cAddress = "set address for";  // untranslated
Blockly.Msg.i2cReadFrom = "read from";  // untranslated
Blockly.Msg.i2cSetSpeedFor = "set speed for";  // untranslated
Blockly.Msg.i2cSpeed = "speed";  // untranslated
Blockly.Msg.i2cStartConditionFor = "start condition for";  // untranslated
Blockly.Msg.i2cStopConditionFor = "stop condition for";  // untranslated
Blockly.Msg.i2cWriteTo = "write to";  // untranslated
Blockly.Msg.illuminance = "Illuminance";  // untranslated
Blockly.Msg.invertdigitalpin = "invert digital pin";  // untranslated
Blockly.Msg.liquid_flow = "Liquid flow";  // untranslated
Blockly.Msg.low_level = "low level";  // untranslated
Blockly.Msg.magnetic_field = "Magnetic field";  // untranslated
Blockly.Msg.microseconds = "microseconds";  // untranslated
Blockly.Msg.milliseconds = "milliseconds";  // untranslated
Blockly.Msg.negative_edge = "negative edge";  // untranslated
Blockly.Msg.other = "Other";  // untranslated
Blockly.Msg.positive_edge = "positive edge";  // untranslated
Blockly.Msg.potentiometers = "Potentiometers";  // untranslated
Blockly.Msg.presence = "Presence";  // untranslated
Blockly.Msg.pressure = "Pressure";  // untranslated
Blockly.Msg.read = "read";  // untranslated
Blockly.Msg.rotation = "Rotation";  // untranslated
Blockly.Msg.seconds = "seconds";  // untranslated
Blockly.Msg.setdigitalpin = "set digital pin";  // untranslated
Blockly.Msg.setpwmpin = "set PWM pin";  // untranslated
Blockly.Msg.soil_moisture = "Soil moisture";  // untranslated
Blockly.Msg.switches = "Switches";  // untranslated
Blockly.Msg.temperature = "Temperature";  // untranslated
Blockly.Msg.thread_create = "create thread";  // untranslated
Blockly.Msg.thread_resume = "resume thread";  // untranslated
Blockly.Msg.thread_sleep = "sleep";  // untranslated
Blockly.Msg.thread_start = "start thread";  // untranslated
Blockly.Msg.thread_stop = "stop thread";  // untranslated
Blockly.Msg.thread_suspend = "suspend thread";  // untranslated
Blockly.Msg.uv = "UV";  // untranslated
Blockly.Msg.wait_for = "wait";  // untranslated
Blockly.Msg.write = "write";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;