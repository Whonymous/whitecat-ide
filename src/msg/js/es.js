// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.es');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añadir comentario";
Blockly.Msg.AM412 = "Presencia - AM412";
Blockly.Msg.ANALOG_JOYSTICK = "Joystick analógico";
Blockly.Msg.ANALOG_PINS = "pin analógico";
Blockly.Msg.AS = "como";
Blockly.Msg.BAND = "";
Blockly.Msg.BITLOGIC_LSB_HELPURL = "";
Blockly.Msg.BITLOGIC_LSB_TITLE = "LSB %1";
Blockly.Msg.BITLOGIC_LSB_TOOLTIP = "Retorna el LSB (byte menos significativo) de la entrada.";
Blockly.Msg.BITLOGIC_MSB_HELPURL = "";
Blockly.Msg.BITLOGIC_MSB_TITLE = "MSB %1";
Blockly.Msg.BITLOGIC_MSB_TOOLTIP = "Retorna el MSB (byte más significativo) de la entrada.";
Blockly.Msg.BITSOFRESOLUTION = "bits de resolución";
Blockly.Msg.BITWISE_HELPURL = "";
Blockly.Msg.BITWISE_TOOLTIP = "";
Blockly.Msg.CANCEL = "Cancelar";
Blockly.Msg.CAN_EXT = "extendido";
Blockly.Msg.CAN_FRAME_ALREADY_EXISTS = "Ya existe un paquete con el nombre '%1'.";
Blockly.Msg.CAN_FRAME_CANCEL = "Cancelar";
Blockly.Msg.CAN_FRAME_CANNOT_REMOVE = "Este paquete no se puede borrar.";
Blockly.Msg.CAN_FRAME_CANNOT_RENAME = "Este paquete no permite cambiar de nombre.";
Blockly.Msg.CAN_FRAME_CREATE = "Crear paquete ...";
Blockly.Msg.CAN_FRAME_NAME = "Nombre del paquete";
Blockly.Msg.CAN_GET = "obtener";
Blockly.Msg.CAN_GET_D0 = "dato 0";
Blockly.Msg.CAN_GET_D1 = "dato 1";
Blockly.Msg.CAN_GET_D2 = "dato 2";
Blockly.Msg.CAN_GET_D3 = "dato 3";
Blockly.Msg.CAN_GET_D4 = "dato 4";
Blockly.Msg.CAN_GET_D5 = "dato 5";
Blockly.Msg.CAN_GET_D6 = "dato 6";
Blockly.Msg.CAN_GET_D7 = "dato 7";
Blockly.Msg.CAN_GET_FROM_FRAME = "de";
Blockly.Msg.CAN_GET_HELPURL = "Ontiene el valor de un campo de un paquete CAN.";
Blockly.Msg.CAN_GET_IDENTIFIER = "identificador";
Blockly.Msg.CAN_GET_LEN = "tamaño";
Blockly.Msg.CAN_GET_TOOLTIP = "";
Blockly.Msg.CAN_GET_TO_FRAME = "hacia";
Blockly.Msg.CAN_GET_TYPE = "tipo";
Blockly.Msg.CAN_READ = "leer desde";
Blockly.Msg.CAN_READ_HELPURL = "";
Blockly.Msg.CAN_READ_TOOLTIP = "Lee un paquet desd el CAN bus.";
Blockly.Msg.CAN_SET = "establece";
Blockly.Msg.CAN_SET_D0 = "dato 0";
Blockly.Msg.CAN_SET_D1 = "dato 1";
Blockly.Msg.CAN_SET_D2 = "dato 2";
Blockly.Msg.CAN_SET_D3 = "dato 3";
Blockly.Msg.CAN_SET_D4 = "dato 4";
Blockly.Msg.CAN_SET_D5 = "dato 5";
Blockly.Msg.CAN_SET_D6 = "dato 6";
Blockly.Msg.CAN_SET_D7 = "dato 7";
Blockly.Msg.CAN_SET_FILTER = "establece filtro para";
Blockly.Msg.CAN_SET_FILTER_FROM = "desde";
Blockly.Msg.CAN_SET_FILTER_HELPURL = "Establece un filtro. Solo los paquetess con un identificador que cumple el filtro son aceptados.";
Blockly.Msg.CAN_SET_FILTER_TO = "hasta";
Blockly.Msg.CAN_SET_FILTER_TOOLTIP = "";
Blockly.Msg.CAN_SET_HELPURL = "Establece el valor de un campo para un paquete CAN a un determinado valor.";
Blockly.Msg.CAN_SET_IDENTIFIER = "identificador";
Blockly.Msg.CAN_SET_LEN = "tamaño";
Blockly.Msg.CAN_SET_SPEED = "establece velocidad para";
Blockly.Msg.CAN_SET_SPEED_HELPURL = "";
Blockly.Msg.CAN_SET_SPEED_TOOLTIP = "Establece la velocidad del CAN bus.";
Blockly.Msg.CAN_SET_TOOLTIP = "";
Blockly.Msg.CAN_SET_TO_FRAME = "para el paquete";
Blockly.Msg.CAN_SET_TO_VALUE = "valor";
Blockly.Msg.CAN_SET_TYPE = "tipo";
Blockly.Msg.CAN_STD = "estándar";
Blockly.Msg.CAN_TYPE_HELPURL = "";
Blockly.Msg.CAN_TYPE_TOOLTIP = "";
Blockly.Msg.CAN_WRITE = "escribir hacia";
Blockly.Msg.CAN_WRITE_FRAME = "paquete";
Blockly.Msg.CAN_WRITE_HELPURL = "Envia un paquete al CAN bus.";
Blockly.Msg.CAN_WRITE_TOOLTIP = "";
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar el valor:";
Blockly.Msg.CLEAN_UP = "Limpiar los bloques";
Blockly.Msg.CLOSE = "Cerrar";
Blockly.Msg.COLLAPSE_ALL = "Contraer bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Contraer bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "proporción";
Blockly.Msg.COLOUR_BLEND_TITLE = "combinar";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores con una proporción determinada (0,0–1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://es.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elige un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elige un color al azar.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "colorear con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con cantidades específicas de rojo, verde y azul. Todos los valores deben encontrarse entre 0 y 100.";
Blockly.Msg.CONFIGURE = "Configurar";
Blockly.Msg.CONFIGURE_LORA = "Configurar LoRa...";
Blockly.Msg.CONFIGURE_MQTT = "Configurar el cliente...";
Blockly.Msg.CONFIGURE_WIFI = "Configurar...";
Blockly.Msg.CONFIGURE_WIFI_STA = "Configurar estación WIFI...";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "romper el bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuar con la siguiente iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Romper el bucle que lo contiene.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Saltar el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "ADVERTENCIA: Este bloque puede usarse sólo dentro de un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://es.wikipedia.org/wiki/Foreach";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento en una lista, establecer la variable '%1' al elemento y luego hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "contar con %1 desde %2 hasta %3 de a %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Hacer que la variable \"%1\" tome los valores desde el número de inicio hasta el número final, contando con el intervalo especificado, y hacer los bloques especificados.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición a este bloque.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Agregar una condición general final a este bloque.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sino";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sino si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, entonces hacer el primer bloque de declaraciones.  De lo contrario, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones. Si ninguno de los valores son verdaderos, hacer el último bloque de declaraciones.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://es.wikipedia.org/wiki/Bucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "hacer";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Hacer algunas declaraciones varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras un valor sea falso, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mientras un valor sea verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.CPU_SLEEP = "duerme el processador";
Blockly.Msg.CREATE_MQTT = "Configurar cliente MQTT...";
Blockly.Msg.DEFAULT_CAN_FRAME = "paquete";
Blockly.Msg.DEFAULT_EVENT = "evento";
Blockly.Msg.DELETE_ALL_BLOCKS = "¿Eliminar todos los %1 bloques?";
Blockly.Msg.DELETE_BLOCK = "Eliminar bloque";
Blockly.Msg.DELETE_CAN_FRAME = "Borrar el paquete '%1'";
Blockly.Msg.DELETE_EVENT = "Borrar el evento '%1'";
Blockly.Msg.DELETE_FILE = "Borrar";
Blockly.Msg.DELETE_FILE_CONFIRM = "¿Quieres borrar el archivo %1?";
Blockly.Msg.DELETE_SENSOR = "Borra el sensor '%1'";
Blockly.Msg.DELETE_VARIABLE = "Borrar la variable \"%1\"";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "¿Borrar %1 usos de la variable \"%2\"?";
Blockly.Msg.DELETE_X_BLOCKS = "Eliminar %1 bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactivar bloque";
Blockly.Msg.DO = "hacer";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.DUTY = "y duty";
Blockly.Msg.EDIT_CAN_FRAME_TITLE = "Editar el paquete ...";
Blockly.Msg.EDIT_EVENT_TITLE = "Editar el evento ...";
Blockly.Msg.EDIT_SENSOR = "Editar sensor ...";
Blockly.Msg.EDIT_SENSOR_TITLE = "Editar sensor ...";
Blockly.Msg.ENABLE_BLOCK = "Activar bloque";
Blockly.Msg.ERROR = "Error";
Blockly.Msg.EVENT_ALREADY_EXISTS = "Ya existe un evento con el nombre '%1'.";
Blockly.Msg.EVENT_BROADCAST = "envia a todos";
Blockly.Msg.EVENT_BROADCAST_AND_WAIT = "y espera";
Blockly.Msg.EVENT_BROADCAST_AND_WAIT_TOOLTIP = "Envia el evento a todos los bloques que escuchan de él y espera que todas las respuestas al evento finalicen.";
Blockly.Msg.EVENT_BROADCAST_HELPURL = "";
Blockly.Msg.EVENT_BROADCAST_TOOLTIP = "Envia el evento a todos los bloques que escuchan de él.";
Blockly.Msg.EVENT_CANCEL = "Cancelar";
Blockly.Msg.EVENT_CANNOT_REMOVE = "Este evento no se puede borrar.";
Blockly.Msg.EVENT_CANNOT_RENAME = "Este evento no permite cambiar de nombre.";
Blockly.Msg.EVENT_CREATE = "Crear evento ...";
Blockly.Msg.EVENT_EVERY = "cada";
Blockly.Msg.EVENT_EVERY_HELPURL = "";
Blockly.Msg.EVENT_EVERY_TOOLTIP = "Este bloque se activa a intervalos de tiempo regulares.";
Blockly.Msg.EVENT_IS_BEING_PROCESSED = "se está procesando?";
Blockly.Msg.EVENT_IS_BEING_PROCESSED_HELPURL = "";
Blockly.Msg.EVENT_IS_BEING_PROCESSED_P = "¿";
Blockly.Msg.EVENT_IS_BEING_PROCESSED_TOOLTIP = "";
Blockly.Msg.EVENT_NAME = "Nombre del evento";
Blockly.Msg.EVENT_THREAD_HELPURL = "";
Blockly.Msg.EVENT_THREAD_TOOLTIP = "";
Blockly.Msg.EVENT_WHEN_BOARD_STARTS = "cuando la placa arranque";
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_HELPURL = "";
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_TOOLTIP = "Este bloque se activará cuando la placa arranque. Normalmente se utiliza para inicializar otros bloques y lanzar eventos.";
Blockly.Msg.EVENT_WHEN_DIGITAL_CHANGES = "cambie a";
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN = "cuando el valor del pin digital";
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_HELPURL = "";
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_TOOLTIP = "";
Blockly.Msg.EVENT_WHEN_I_RECEIVE = "cuando se reciba";
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME = "cuando se reciba un paquete por LoRa";
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_HELPURL = "";
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_TOOLTIP = "Este bloque se activará cuando se reciba un paquete por la red LoRa.";
Blockly.Msg.EVENT_WHEN_I_RECEIVE_HELPURL = "";
Blockly.Msg.EVENT_WHEN_I_RECEIVE_TOOLTIP = "Este bloque se activará cuando se envie el evento desde otro script.";
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED = "cuando la Wi-Fi esté conectada";
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED_TOOLTIP = "Este bloque se activará cuando la Wi-Fi se conecte.";
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED = "cuando la Wi-Fi esté desconectada";
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED_TOOLTIP = "Este bloque se activará cuando la Wi-Fi se desconecte.";
Blockly.Msg.EXPAND_ALL = "Expandir bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
Blockly.Msg.FALSE = "falso";
Blockly.Msg.FILE_DELETED = "Se ha borrado el archivo %1.";
Blockly.Msg.FOREVER = "para siempre";
Blockly.Msg.FREQUENCY = "a frecuencia";
Blockly.Msg.GPS = "GPS compatible con NMEA";
Blockly.Msg.HALL_FLOW = "Flujo de líquido por efecto hall";
Blockly.Msg.HALL_SWITCH = "Conmutador de efecto hall";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.HERTZS = "herzios";
Blockly.Msg.HIGH = "alto";
Blockly.Msg.IN = "en";
Blockly.Msg.INLINE_INPUTS = "Entradas en línea";
Blockly.Msg.INPUT = "entrada";
Blockly.Msg.INPUT_PINS = "pin de entrada";
Blockly.Msg.INTERNAL_HALL = "Sensor de efecto hall interno";
Blockly.Msg.Khz = "Khz";
Blockly.Msg.LINEAR_POT = "Potenciómetro lineal";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devuelve una lista, de longitud 0, sin ningún dato";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar las secciones para reconfigurar este bloque de lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# del final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Devuelve el elemento en la posición especificada en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Elimina y devuelve el elemento en la posición especificada en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Elimina el elemento en la posición especificada en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 es el último elemento.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 es el primer elemento.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve %1 si el elemento no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Inserta el elemento en la posición especificada en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Establece el elemento en la posición especificada en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascendente";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descendente";
Blockly.Msg.LISTS_SORT_TITLE = "orden %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Ordenar una copia de una lista.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabético, ignorar mayúscula/minúscula";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérico";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabético";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si ambas entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si ambas entradas son distintas.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve verdadero si al menos una de las entradas es verdadera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si es falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si es verdadero";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".";
Blockly.Msg.LORA_ACTIVATION = "Activación";
Blockly.Msg.LORA_ACTIVATION_DATA = "Datos de activación del nodo:";
Blockly.Msg.LORA_ADR = "Adaptative Data Rate";
Blockly.Msg.LORA_BAND = "Banda";
Blockly.Msg.LORA_CONFIG_RETX = "Retransmisiones";
Blockly.Msg.LORA_CONFIG_TITLE = "Configuración de LoRa WAN ...";
Blockly.Msg.LORA_CONFIRMED = "confirmado";
Blockly.Msg.LORA_DR = "Data Rate";
Blockly.Msg.LORA_FRAME = " al puerto ";
Blockly.Msg.LORA_GET_ABP_DATA_HELP = "The Whitecat IDE ofrece a sus usuarios una aplicación TTN Lora WAN para probar un nodo ABP. Si desea utilizarlo, haga clic en el botón 'Obtener datos' para obtener los datos de personalización.";
Blockly.Msg.LORA_GET_DATA = "Obtener datos ...";
Blockly.Msg.LORA_GET_OTAA_DATA_HELP = "The Whitecat IDE ofrece a sus usuarios una aplicación TTN Lora WAN para probar un nodo OTAA. Si desea utilizarlo, haga clic en el botón 'Obtener datos' para obtener los datos de activación.";
Blockly.Msg.LORA_GET_PAYLOAD = "obtener payload a partir del paquete recibido";
Blockly.Msg.LORA_GET_PORT = "obtener puerto a partir del paquete recibido";
Blockly.Msg.LORA_INVALID = "El valor de %1 no es válido.";
Blockly.Msg.LORA_JOIN = "join";
Blockly.Msg.LORA_PAYLOAD = " con payload ";
Blockly.Msg.LORA_PERSONALIZATION_DATA = "Datos de personalización del nodo:";
Blockly.Msg.LORA_SET_ADR = "establece la funcióm adaptative data rate a";
Blockly.Msg.LORA_SET_APPEUI = "establece AppEui a";
Blockly.Msg.LORA_SET_APPKEY = "establece AppKey a";
Blockly.Msg.LORA_SET_APPSKEY = "establece setAppsKey a";
Blockly.Msg.LORA_SET_AR = "set automatic reply to";
Blockly.Msg.LORA_SET_DEVADDR = "establece DevAddr a";
Blockly.Msg.LORA_SET_DEVEUI = "establece DevEui a";
Blockly.Msg.LORA_SET_DR = "establece el data rate a";
Blockly.Msg.LORA_SET_NWKSKEY = "establece NwksKey a";
Blockly.Msg.LORA_SET_RETX = "establece el número de retransmissions a";
Blockly.Msg.LORA_TX = "transmitir un paquete ";
Blockly.Msg.LORA_UNCONFIRMED = "sin confirmar";
Blockly.Msg.LOW = "bajo";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "añadir %2 a %1";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limitar %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitar un número entre los límites especificados (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto al dividir los dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracción aleatoria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve una fracción aleatoria entre 0,0 (ambos inclusive) y 1.0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio de %1 a %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://es.wikipedia.org/wiki/Redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondear";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondear hacia abajo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondear hacia arriba";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número hacia arriba o hacia abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve la negación de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://es.wikipedia.org/wiki/Función_trigonométrica";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arcocoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un grado (no radián).";
Blockly.Msg.MHZ = "Mhz";
Blockly.Msg.MQTT_CONFIG_TITLE = "Configuración del cliente MQTT ...";
Blockly.Msg.MQTT_GET_DATA = "Obtener datos ...";
Blockly.Msg.MQTT_GET_DATA_HELP = "The Whitecat IDE ofrece a sus usuarios un broker MQTT con fines de prueba. Si desea utilizar, haga clic en el botón 'Obtener datos' para obtener los datos de la conexión..";
Blockly.Msg.MQTT_GET_LEN = "obtener la longitud del mensaje recibido";
Blockly.Msg.MQTT_GET_PAYLOAD = "obtener el mensaje recibido";
Blockly.Msg.MQTT_INVALID = "El valor de %1 no es válido.";
Blockly.Msg.MQTT_PUBLISH = "publicar";
Blockly.Msg.MQTT_QOS = "con";
Blockly.Msg.MQTT_SUBSCRIBE = "cuando se reciba un mensaje del tópico";
Blockly.Msg.MQTT_TO_TOPIC = "en tópico";
Blockly.Msg.NEW_CAN_FRAME = "Nuevo paquete ...";
Blockly.Msg.NEW_CAN_FRAME_TITLE = "Nuevo paquete ...";
Blockly.Msg.NEW_EVENT = "Nuevo evento ...";
Blockly.Msg.NEW_EVENT_TITLE = "Nuevo evento ...";
Blockly.Msg.NEW_SENSOR = "Nuevo sensor...";
Blockly.Msg.NEW_SENSOR_SELECT_ONE = "(selecciona uno)";
Blockly.Msg.NEW_SENSOR_TITLE = "Nuevo sensor ...";
Blockly.Msg.NEW_VARIABLE = "Crear variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de variable nueva:";
Blockly.Msg.NO = "No";
Blockly.Msg.ONLY_ALLOWED_WITHIN_BLOCK = "Atención: este bloque solo se puede utilizar dentro de un bloque \"%1\"";
Blockly.Msg.ON_EVERY_RECEIVED_LORA_FRAME = "se reciba un paquete de LoRa WAN";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "salida";
Blockly.Msg.OUTPUT_PINS = "pin de salida";
Blockly.Msg.PERCENT = "%";
Blockly.Msg.PING28015 = "PING))) 28015";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1' y usa su salida.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe esta función...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "hacer algo";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "para";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.PUSH_SWITCH = "Pulsador";
Blockly.Msg.PWM_PINS = "pin pwm";
Blockly.Msg.REDO = "Rehacer";
Blockly.Msg.REL_ROT_ENCODER = "Encoder rotatorio relativo";
Blockly.Msg.REMOVE_COMMENT = "Eliminar comentario";
Blockly.Msg.REMOVE_SENSOR = "Eliminar sensor ...";
Blockly.Msg.RENAME_CAN_FRAME = "Modificar el nombre del paquete...";
Blockly.Msg.RENAME_EVENT = "Modificar el nombre del evento...";
Blockly.Msg.RENAME_SENSOR = "Renombra sensor ...";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar todas las variables «%1» a:";
Blockly.Msg.S2Y0A21 = "Sharp 2Y0A21";
Blockly.Msg.SENSOR = "Sensor";
Blockly.Msg.SENSOR_ACQUIRE = "obtener datos de %1 (%2)";
Blockly.Msg.SENSOR_ACQUIRE_HELPURL = "";
Blockly.Msg.SENSOR_ACQUIRE_TOOLTIP = "Obtener datos del sensor.";
Blockly.Msg.SENSOR_ALREADY_EXISTS = "Ya existe un sensor llamado '%1'.";
Blockly.Msg.SENSOR_ATTACH = "enganchar %1 (%2)";
Blockly.Msg.SENSOR_ATTACH_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_ATTACH_TOOLTIP = "Engancha el sensor a su interfaz de hardware.";
Blockly.Msg.SENSOR_CANCEL = "Cancelar";
Blockly.Msg.SENSOR_CATEGORY = "Categoría";
Blockly.Msg.SENSOR_CREATE = "Crear";
Blockly.Msg.SENSOR_DEFAULT_NAME = "sensor";
Blockly.Msg.SENSOR_DEVICE_ADDR = "Dirección en el bus";
Blockly.Msg.SENSOR_DEVICE_ID = "Identificador en el bus";
Blockly.Msg.SENSOR_DISCOVER = "Buscar en el bus";
Blockly.Msg.SENSOR_INT_ATTACHED = "%1 connectado a";
Blockly.Msg.SENSOR_NAME = "Nombre en el entorn de trabajo";
Blockly.Msg.SENSOR_READ1 = "leer ";
Blockly.Msg.SENSOR_READ2 = " de %1 (%2)";
Blockly.Msg.SENSOR_READ_HELPURL = "";
Blockly.Msg.SENSOR_READ_TOOLTIP = "Leer datos del sensor.";
Blockly.Msg.SENSOR_REMOVE_CONFIRM = "¿Quieres borrar el sensor %1 de tu proyecto?";
Blockly.Msg.SENSOR_SET1 = "establece ";
Blockly.Msg.SENSOR_SET2 = " con valor ";
Blockly.Msg.SENSOR_SET3 = " para %1 (%2)";
Blockly.Msg.SENSOR_SET_HELPURL = "";
Blockly.Msg.SENSOR_SET_TOOLTIP = "Establece opciones de configuración para el sensor.";
Blockly.Msg.SENSOR_WHEN1 = "cuando ";
Blockly.Msg.SENSOR_WHEN2 = " cambia para %1 (%2)";
Blockly.Msg.SENSOR_WHEN_HELPURL = "";
Blockly.Msg.SENSOR_WHEN_TOOLTIP = "Este bloque se activa cuando hay una variación en la magnitud.";
Blockly.Msg.SERVO_ATTACH = "enganxa el servo al pin";
Blockly.Msg.SERVO_ATTACH_HELPURL = "";
Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Engancha el servo a un pin.";
Blockly.Msg.SERVO_CALIBRATE = "Calibrar ...";
Blockly.Msg.SERVO_MOVE = "mover servo conectado al pin";
Blockly.Msg.SERVO_MOVE_DEGREES = "grados";
Blockly.Msg.SERVO_MOVE_HELPURL = "";
Blockly.Msg.SERVO_MOVE_TOOLTIP = "Mueve el servo conectado a un pin determinado un cierto número de grados. Cuando los grados son > 0 el movimiento es en el sentido horario, y cuando es < 0 es en el sentido antihorario.";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable '%1'.";
Blockly.Msg.TEXT_CATCH_TITLE = "captura";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Agregar un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_FINALLY = "finalmente";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve %1 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve verdadero si el texto proporcionado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear un fragmento de texto al unir cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PACK_HELPURL = "";
Blockly.Msg.TEXT_PACK_TITLE1 = "empaqueta hacia";
Blockly.Msg.TEXT_PACK_TITLE2 = "con";
Blockly.Msg.TEXT_PACK_TITLE3 = "con";
Blockly.Msg.TEXT_PACK_TOOLTIP = "Enpaqueta un conjunto de valores en una representación de cadena hexadecimal.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, palabra o línea de texto.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TEXT_TRY_CATCHED = "es capturado";
Blockly.Msg.TEXT_TRY_CATCH_ERROR = "cuando el error";
Blockly.Msg.TEXT_TRY_CATCH_OTHER_ERROR = "cuando se han capturado otros errores";
Blockly.Msg.TEXT_TRY_CATCH_RAISE_AGAIN = "vuelve a lanzar el error capturado";
Blockly.Msg.TEXT_TRY_HELPURL = "";
Blockly.Msg.TEXT_TRY_TITLE = "prueba";
Blockly.Msg.TEXT_TRY_TOOLTIP = "Intenta ejecutar un conjunto de instrucciones y capturar los errores, en caso de que se produzcan, sin detener el programa.";
Blockly.Msg.TEXT_UNPACK_HELPURL = "";
Blockly.Msg.TEXT_UNPACK_TITLE1 = "desempaquetar desde";
Blockly.Msg.TEXT_UNPACK_TITLE2 = "hacia";
Blockly.Msg.TEXT_UNPACK_TITLE3 = "hacia";
Blockly.Msg.TEXT_UNPACK_TOOLTIP = "Desenpaqueta un conjunto de valores codificados en una representación de cadena hexadecimal.";
Blockly.Msg.THERMISTOR = "Termistor de 10K";
Blockly.Msg.THREAD_RETURN = "retorna identificador";
Blockly.Msg.TILT_SWITCH = "Conmutador de inclinación";
Blockly.Msg.TO = "a";
Blockly.Msg.TODAY = "Hoy";
Blockly.Msg.TRUE = "cierto";
Blockly.Msg.UNARY_BITWISE_HELPURL = "";
Blockly.Msg.UNARY_BITWISE_TOOLTIP = "";
Blockly.Msg.UNDO = "Deshacer";
Blockly.Msg.UPDATE = "Actualizar";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET = "establecer %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual a la entrada.";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Ya existe una variable llamada \"%1\".";
Blockly.Msg.WARNING_CAN_INVALID_DATA = "Datp inválido. Ha de ser >= 0 y <= 255.";
Blockly.Msg.WARNING_CAN_INVALID_LEN = "Longitud inválida. Ha de ser >= 0 y <= 8.";
Blockly.Msg.WARNING_CAN_INVALID_TYPE = "Tipo de paquete inválido.";
Blockly.Msg.WARNING_CATCH_ERROR_NOT_ALLOWED_HERE = "ADVERTENCIA: Este bloque puede usarse sólo dentro de un bloque 'cuando el error es capturado'.";
Blockly.Msg.WARNING_EVENTS_CAN_ONLY_PROCESSED_IN_ONE_EVENT_BLOCK = "Atención: los eventos solo se pueden procesar dentro de un único bloque de eventos.";
Blockly.Msg.WARNING_NOT_IN_HAT_BLOCK = "Atención: este bloque solo se puede utilizar dentro de un bloque hat.";
Blockly.Msg.WARNING_ONLY_ONE_INSTANCE_ALLOWED = "Atención: solo se permite una instancia de este bloque.";
Blockly.Msg.WARNING_RAISE_ERROR_AGAIN_NOT_ALLOWED_HERE = "ADVERTENCIA: Este bloque puede usarse sólo dentro de un bloque 'prueba captura finalmente' en la parte captura.";
Blockly.Msg.WIFI_CONFIG_TITLE = "Configuración de Wi-Fi ...";
Blockly.Msg.WIFI_INVALID = "El valor de %1 no es válido.";
Blockly.Msg.WIFI_START = "iniciar Wi-Fi";
Blockly.Msg.WIFI_STOP = "parar Wi-Fi";
Blockly.Msg.WIFI_TYPE = "Tipo";
Blockly.Msg.WITH = "con";
Blockly.Msg.YES = "Sí";
Blockly.Msg.air_quality = "Calidad del aire";
Blockly.Msg.any = "cualquier";
Blockly.Msg.any_edge = "cualquier flanco";
Blockly.Msg.configureLora = "configura LoRa utilizando la banda de los ";
Blockly.Msg.configureanalogpin = "configurar pin analógico";
Blockly.Msg.configuredigitalpin = "configurar pin digital";
Blockly.Msg.distance = "Distancia";
Blockly.Msg.for = "para";
Blockly.Msg.geopos = "Posición geográfica";
Blockly.Msg.getanalogpin = "obtener valor pin analógico";
Blockly.Msg.getdigitalpin = "obtener valor pin digital";
Blockly.Msg.getexternalanalogchannel = "obtener valor analógico de";
Blockly.Msg.high_level = "nivel alto";
Blockly.Msg.humidity = "Humedad";
Blockly.Msg.hz = "hz";
Blockly.Msg.i2cAddress = "establece dirección para I2C";
Blockly.Msg.i2cReadFrom = "leer de I2C";
Blockly.Msg.i2cSetSpeedFor = "establece velocidad para";
Blockly.Msg.i2cSpeed = "velocidad";
Blockly.Msg.i2cStartConditionFor = "condición start para I2C";
Blockly.Msg.i2cStopConditionFor = "condición stop para I2C";
Blockly.Msg.i2cWriteTo = "escribir a I2C";
Blockly.Msg.illuminance = "Iluminancia";
Blockly.Msg.invertdigitalpin = "invierte valor pin digital";
Blockly.Msg.liquid_flow = "Flujo de líquido";
Blockly.Msg.low_level = "nivel bajo";
Blockly.Msg.magnetic_field = "Campo magnético";
Blockly.Msg.microseconds = "microsegundos";
Blockly.Msg.milliseconds = "milisegundos";
Blockly.Msg.negative_edge = "flanco negativo";
Blockly.Msg.other = "Otros";
Blockly.Msg.positive_edge = "flanco positivo";
Blockly.Msg.potentiometers = "Potenciómetros";
Blockly.Msg.presence = "Presencia";
Blockly.Msg.pressure = "Pressión";
Blockly.Msg.read = "leer";
Blockly.Msg.rotation = "Rotación";
Blockly.Msg.seconds = "segundos";
Blockly.Msg.setdigitalpin = "establecer valor pin digital";
Blockly.Msg.setpwmpin = "establecer pin PWM";
Blockly.Msg.soil_moisture = "Humedad del suelo";
Blockly.Msg.switches = "Conmutadores";
Blockly.Msg.temperature = "Temperatura";
Blockly.Msg.thread_create = "crea fil";
Blockly.Msg.thread_resume = "reanudar fil";
Blockly.Msg.thread_sleep = "dormir";
Blockly.Msg.thread_start = "arrancar hilo";
Blockly.Msg.thread_stop = "parar fil";
Blockly.Msg.thread_suspend = "suspender fil";
Blockly.Msg.uv = "UV";
Blockly.Msg.wait_for = "esperar";
Blockly.Msg.write = "escribir";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;