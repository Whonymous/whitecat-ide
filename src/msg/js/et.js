// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.et');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Lisa kommentaar";
Blockly.Msg.AM412 = "PIR - AM412";  // untranslated
Blockly.Msg.ANALOG_JOYSTICK = "Analog joystick";  // untranslated
Blockly.Msg.ANALOG_PINS = "analog pin";  // untranslated
Blockly.Msg.AS = "as";  // untranslated
Blockly.Msg.BAND = "band";  // untranslated
Blockly.Msg.BITLOGIC_LSB_HELPURL = "";  // untranslated
Blockly.Msg.BITLOGIC_LSB_TITLE = "LSB %1";  // untranslated
Blockly.Msg.BITLOGIC_LSB_TOOLTIP = "Returns the LSB (less significant byte) of the input.";  // untranslated
Blockly.Msg.BITLOGIC_MSB_HELPURL = "";  // untranslated
Blockly.Msg.BITLOGIC_MSB_TITLE = "MSB %1";  // untranslated
Blockly.Msg.BITLOGIC_MSB_TOOLTIP = "Returns the MSB (most significant byte) of the input.";  // untranslated
Blockly.Msg.BITSOFRESOLUTION = "bits of resolution";  // untranslated
Blockly.Msg.BITWISE_HELPURL = "";  // untranslated
Blockly.Msg.BITWISE_TOOLTIP = "";  // untranslated
Blockly.Msg.CANCEL = "Cancel";  // untranslated
Blockly.Msg.CAN_EXT = "extended";  // untranslated
Blockly.Msg.CAN_FRAME_ALREADY_EXISTS = "An frame named '%1' already exists.";  // untranslated
Blockly.Msg.CAN_FRAME_CANCEL = "Cancel";  // untranslated
Blockly.Msg.CAN_FRAME_CANNOT_REMOVE = "This frame cannot remove.";  // untranslated
Blockly.Msg.CAN_FRAME_CANNOT_RENAME = "This frame cannot rename.";  // untranslated
Blockly.Msg.CAN_FRAME_CREATE = "Creeate frame ...";  // untranslated
Blockly.Msg.CAN_FRAME_NAME = "Frame name";  // untranslated
Blockly.Msg.CAN_GET = "get";  // untranslated
Blockly.Msg.CAN_GET_D0 = "data 0";  // untranslated
Blockly.Msg.CAN_GET_D1 = "data 1";  // untranslated
Blockly.Msg.CAN_GET_D2 = "data 2";  // untranslated
Blockly.Msg.CAN_GET_D3 = "data 3";  // untranslated
Blockly.Msg.CAN_GET_D4 = "data 4";  // untranslated
Blockly.Msg.CAN_GET_D5 = "data 5";  // untranslated
Blockly.Msg.CAN_GET_D6 = "data 6";  // untranslated
Blockly.Msg.CAN_GET_D7 = "data 7";  // untranslated
Blockly.Msg.CAN_GET_FROM_FRAME = "from";  // untranslated
Blockly.Msg.CAN_GET_HELPURL = "Get a field value from a CAN frame.";  // untranslated
Blockly.Msg.CAN_GET_IDENTIFIER = "identifier";  // untranslated
Blockly.Msg.CAN_GET_LEN = "length";  // untranslated
Blockly.Msg.CAN_GET_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_GET_TO_FRAME = "to";  // untranslated
Blockly.Msg.CAN_GET_TYPE = "type";  // untranslated
Blockly.Msg.CAN_READ = "read from ";  // untranslated
Blockly.Msg.CAN_READ_HELPURL = "";  // untranslated
Blockly.Msg.CAN_READ_TOOLTIP = "Read a frame from the CAN bus.";  // untranslated
Blockly.Msg.CAN_SET = "set";  // untranslated
Blockly.Msg.CAN_SET_D0 = "data 0";  // untranslated
Blockly.Msg.CAN_SET_D1 = "data 1";  // untranslated
Blockly.Msg.CAN_SET_D2 = "data 2";  // untranslated
Blockly.Msg.CAN_SET_D3 = "data 3";  // untranslated
Blockly.Msg.CAN_SET_D4 = "data 4";  // untranslated
Blockly.Msg.CAN_SET_D5 = "data 5";  // untranslated
Blockly.Msg.CAN_SET_D6 = "data 6";  // untranslated
Blockly.Msg.CAN_SET_D7 = "data 7";  // untranslated
Blockly.Msg.CAN_SET_FILTER = "set filter for";  // untranslated
Blockly.Msg.CAN_SET_FILTER_FROM = "from";  // untranslated
Blockly.Msg.CAN_SET_FILTER_HELPURL = "Set a filter. Only messages that it's id match the filter are accepted.";  // untranslated
Blockly.Msg.CAN_SET_FILTER_TO = "to";  // untranslated
Blockly.Msg.CAN_SET_FILTER_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_SET_HELPURL = "Set a frame field to an specified value.";  // untranslated
Blockly.Msg.CAN_SET_IDENTIFIER = "identifier";  // untranslated
Blockly.Msg.CAN_SET_LEN = "length";  // untranslated
Blockly.Msg.CAN_SET_SPEED = "set speed for";  // untranslated
Blockly.Msg.CAN_SET_SPEED_HELPURL = "";  // untranslated
Blockly.Msg.CAN_SET_SPEED_TOOLTIP = "Set speed for CAN bus.";  // untranslated
Blockly.Msg.CAN_SET_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_SET_TO_FRAME = "to frame";  // untranslated
Blockly.Msg.CAN_SET_TO_VALUE = "value";  // untranslated
Blockly.Msg.CAN_SET_TYPE = "type";  // untranslated
Blockly.Msg.CAN_STD = "standard";  // untranslated
Blockly.Msg.CAN_TYPE_HELPURL = "";  // untranslated
Blockly.Msg.CAN_TYPE_TOOLTIP = "";  // untranslated
Blockly.Msg.CAN_WRITE = "write to ";  // untranslated
Blockly.Msg.CAN_WRITE_FRAME = "frame";  // untranslated
Blockly.Msg.CAN_WRITE_HELPURL = "Send a frame to the CAN bus.";  // untranslated
Blockly.Msg.CAN_WRITE_TOOLTIP = "";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Muuda väärtust:";
Blockly.Msg.CLEAN_UP = "Korista plokid kokku";
Blockly.Msg.CLOSE = "Close";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Tõmba plokid kokku";
Blockly.Msg.COLLAPSE_BLOCK = "Tõmba plokk kokku";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "1. värvist";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "2. värvist";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "suhtega";
Blockly.Msg.COLOUR_BLEND_TITLE = "segu";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Segab kaks värvi määratud suhtega (0.0 - 1.0) kokku.";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Valitud värv paletist.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "juhuslik värv";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Juhuslikult valitud värv.";
Blockly.Msg.COLOUR_RGB_BLUE = "sinisest";
Blockly.Msg.COLOUR_RGB_GREEN = "rohelisest";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "punasest";
Blockly.Msg.COLOUR_RGB_TITLE = "segu";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Tekitab värvi määratud hulgast punasest, rohelisest ja sinisest. Kõik väärtused peavad olema 0 ja 100 vahel.";
Blockly.Msg.CONFIGURE = "Configure";  // untranslated
Blockly.Msg.CONFIGURE_LORA = "Configure LoRa...";  // untranslated
Blockly.Msg.CONFIGURE_MQTT = "Configure client...";  // untranslated
Blockly.Msg.CONFIGURE_WIFI = "Configure...";  // untranslated
Blockly.Msg.CONFIGURE_WIFI_STA = "Configure WIFI station...";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "välju kordusest";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "katkesta see kordus ja liigu järgmisele";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Väljub kordusest ja liigub edasi korduse järel oleva koodi käivitamisele.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Katkestab korduses oleva koodi käivitamise ja käivitab järgmise korduse.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Hoiatus: Seda plokki saab kasutada ainult korduse sees.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "iga elemendiga %1 loendis %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Iga elemendiga loendis anna muutujale '%1' elemendi väärtus ja kõivita plokis olevad käsud.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "loendus muutujaga %1 alates %2 kuni %3, %4 kaupa";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Annab muutujale '%1' väärtused ühest numbrist teiseni, muutes seda intervalli kaupa ja käivitab igal muudatusel ploki sees oleva koodi.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Lisab „kui“ plokile tingimuse.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Lisab „kui“ plokile lõpliku tingimuseta koodiploki.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Selle „kui“ ploki muutmine sektsioonide lisamise, eemaldamise ja järjestamisega.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "vastasel juhul";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "vastasel juhul, kui";
Blockly.Msg.CONTROLS_IF_MSG_IF = "kui";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Kui avaldis on tõene, käivita ploki sees olevad käsud.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Kui avaldis on tõene, käivita käsud esimesest plokist. Vastasel juhul käivita käsud teisest plokist.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Kui esimene avaldis on tõene, käivita käsud esimesest plokist. Vastasel juhul, kui teine avaldis on tõene, käivita käsud teisest plokist.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Kui esimene avaldis on tõene, käivita käsud esimesest plokist. Vastasel juhul, kui teine avaldis on tõene, käivita käsud teisest plokist. Kui ükski avaldistest pole tõene, käivita käsud viimasest plokist.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "käivita";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "%1 korda";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Plokis olevate käskude käivitamine määratud arv kordi.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "seni kuni pole";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "seni kuni on";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Plokis olevaid käske korratakse seni kui avaldis pole tõene.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Plokis olevaid käske korratakse seni kui avaldis on tõene.";
Blockly.Msg.CPU_SLEEP = "sleep CPU";  // untranslated
Blockly.Msg.CREATE_MQTT = "Configure MQTT client...";  // untranslated
Blockly.Msg.DEFAULT_CAN_FRAME = "frame";  // untranslated
Blockly.Msg.DEFAULT_EVENT = "event";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Kas kustutada kõik %1 plokki?";
Blockly.Msg.DELETE_BLOCK = "Kustuta plokk";
Blockly.Msg.DELETE_CAN_FRAME = "Delete the '%1' frame";  // untranslated
Blockly.Msg.DELETE_EVENT = "Delete the '%1' event";  // untranslated
Blockly.Msg.DELETE_FILE = "Delete";  // untranslated
Blockly.Msg.DELETE_FILE_CONFIRM = "Do you want to delete %1?";  // untranslated
Blockly.Msg.DELETE_SENSOR = "Delete the '%1' sensor";  // untranslated
Blockly.Msg.DELETE_VARIABLE = "Kustuta muutuja '%1'";
Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Kas kustutada %1 kohas kasutatav muutuja '%2'?";
Blockly.Msg.DELETE_X_BLOCKS = "Kustuta %1 plokki";
Blockly.Msg.DISABLE_BLOCK = "Keela ploki kasutamine";
Blockly.Msg.DO = "do";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Tekita duplikaat";
Blockly.Msg.DUTY = "and duty";  // untranslated
Blockly.Msg.EDIT_CAN_FRAME_TITLE = "Edit frame ...";  // untranslated
Blockly.Msg.EDIT_EVENT_TITLE = "Edit event ...";  // untranslated
Blockly.Msg.EDIT_SENSOR = "Edit sensor ...";  // untranslated
Blockly.Msg.EDIT_SENSOR_TITLE = "Edit sensor ...";  // untranslated
Blockly.Msg.ENABLE_BLOCK = "Luba ploki kasutamine";
Blockly.Msg.ERROR = "Error";  // untranslated
Blockly.Msg.EVENT_ALREADY_EXISTS = "An event named '%1' already exists.";  // untranslated
Blockly.Msg.EVENT_BROADCAST = "broadcast";  // untranslated
Blockly.Msg.EVENT_BROADCAST_AND_WAIT = "and wait";  // untranslated
Blockly.Msg.EVENT_BROADCAST_AND_WAIT_TOOLTIP = "Sends a broadcast, activating When I Receive blocks that are set to that broadcast, and pauses until all scripts activated by the broadcast are completed";  // untranslated
Blockly.Msg.EVENT_BROADCAST_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_BROADCAST_TOOLTIP = "Sends a broadcast, activating When I Receive blocks that are set to that broadcast.";  // untranslated
Blockly.Msg.EVENT_CANCEL = "Cancel";  // untranslated
Blockly.Msg.EVENT_CANNOT_REMOVE = "This event cannot remove.";  // untranslated
Blockly.Msg.EVENT_CANNOT_RENAME = "This event cannot rename.";  // untranslated
Blockly.Msg.EVENT_CREATE = "Creeate event ...";  // untranslated
Blockly.Msg.EVENT_EVERY = "every";  // untranslated
Blockly.Msg.EVENT_EVERY_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_EVERY_TOOLTIP = "This block is invoked at regular time intervals.";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED = "is being processed?";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_P = "";  // untranslated
Blockly.Msg.EVENT_IS_BEING_PROCESSED_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_NAME = "Event name";  // untranslated
Blockly.Msg.EVENT_THREAD_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_THREAD_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS = "when board starts";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_BOARD_STARTS_TOOLTIP = "This block is invoked at board startup. Tipically is used for initialize other blocks, and broadcast events.";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_CHANGES = "changes at";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN = "when digital pin";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_DIGITAL_PIN_TOOLTIP = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE = "when I receive";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME = "when I receive a LoRa frame";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_TOOLTIP = "This block is invoked when a LoRa frame is received.";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_HELPURL = "";  // untranslated
Blockly.Msg.EVENT_WHEN_I_RECEIVE_TOOLTIP = "This block will be invoked once the specified broadcast has been sent by an other script.";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED = "when Wi-Fi is connected";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_CONNECTED_TOOLTIP = "This block is invoked when the Wi-Fi connected.";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED = "when Wi-Fi is disconnected";  // untranslated
Blockly.Msg.EVENT_WHEN_WIFI_IS_DISCONNECTED_TOOLTIP = "This block is invoked when the Wi-Fi disconnected.";  // untranslated
Blockly.Msg.EXPAND_ALL = "Laota plokid laiali";
Blockly.Msg.EXPAND_BLOCK = "Laota plokk laiali";
Blockly.Msg.EXTERNAL_INPUTS = "Sisendid ploki taga";
Blockly.Msg.FALSE = "false";  // untranslated
Blockly.Msg.FILE_DELETED = "%1 has been deleted.";  // untranslated
Blockly.Msg.FOREVER = "forever";  // untranslated
Blockly.Msg.FREQUENCY = "to frequency";  // untranslated
Blockly.Msg.GPS = "NMEA GPS";  // untranslated
Blockly.Msg.HALL_FLOW = "Flow by hall effect";  // untranslated
Blockly.Msg.HALL_SWITCH = "Hall effect switch";  // untranslated
Blockly.Msg.HELP = "Abi";
Blockly.Msg.HERTZS = "hertzs";  // untranslated
Blockly.Msg.HIGH = "high";  // untranslated
Blockly.Msg.IN = "in";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Sisendid ploki sees";
Blockly.Msg.INPUT = "input";  // untranslated
Blockly.Msg.INPUT_PINS = "input pin";  // untranslated
Blockly.Msg.INTERNAL_HALL = "Internal hall effect sensor";  // untranslated
Blockly.Msg.Khz = "Khz";  // untranslated
Blockly.Msg.LINEAR_POT = "Linear pot";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "tühi loend";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Tagastab loendi, mille pikkus on 0 ja milles pole ühtegi elementi.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "loend";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Loendiploki elementide lisamine, eemaldamine või järjestuse muutmine.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "uus loend";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Elemendi lisamine loendisse.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Tekitab mistahes arvust elementidest loendi.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "esimene element";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "element # (lõpust)";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "element #";
Blockly.Msg.LISTS_GET_INDEX_GET = "võetud";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "võetud ja eemaldatud";
Blockly.Msg.LISTS_GET_INDEX_LAST = "viimane element";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "juhuslik element";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eemalda";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Tagastab loendi esimese elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Tagastab loendis määratud asukohal oleva elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Tagastab loendi viimase elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Tagastab loendi juhusliku elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Tagastab ja eemaldab loendist esimese elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Tagastab ja eemaldab loendist määratud asukohal oleva elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Tagastab ja eemaldab loendist viimase elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Tagastab ja eemaldab loendist juhusliku elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Eemaldab loendist esimese elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Eemaldab loendist määratud asukohal oleva elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Eemaldab loendist viimase elemendi.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Eemaldab loendist juhusliku elemendi.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "elemendini # (lõpust)";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "elemendini #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "lõpuni";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "alamloend algusest";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "alamloend elemendist # (lõpust)";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "alamloend elemendist #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Tekitab loendi määratud osast koopia.";
Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "Viimane element on %1.";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "Esimene element on %1.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "esimene leitud";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "viimase leitud";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Tagastab esimese/viimase loendist leitud objekti asukoha (objekti järjekorranumbri loendis). Kui objekti ei leita, tagastab %1.";
Blockly.Msg.LISTS_INLIST = "loendis";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 on tühi";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Tagastab „tõene“ kui loend on tühi.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "%1 pikkus";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Tagastab loendi pikkuse.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "loend pikkusega %2 elemendist %1";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Tekitab uue loendi, millesse lisatakse ühte elementi pikkusega määratud arv kordi.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = ", väärtus";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "lisa asukohale";
Blockly.Msg.LISTS_SET_INDEX_SET = "asenda";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Lisab loendi algusesse uue elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Lisab määratud asukohale loendis uue elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Lisab loendi lõppu uue elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Lisab juhuslikule kohale loendis uue elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Asendab loendis esimese elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Asendab loendis määratud kohal oleva elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Asendab loendis viimase elemendi.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Asendab loendis juhusliku elemendi.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "kasvavalt";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "kahanevalt";
Blockly.Msg.LISTS_SORT_TITLE = "%1 %2 sorteeritud %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Loendi koopia sorteerimine.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "tähestiku järgi (tähesuurust eirates)";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "arvväärtuste järgi";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "tähestiku järgi";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "loend, tekitatud tekstist";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "tekst, tekitatud loendist";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Ühendab tekstide loendis olevad tükid üheks tekstiks, asetades tükkide vahele eraldaja.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Tükeldab teksti eraldajade kohalt ja asetab tükid tekstide loendisse.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "eraldajaga";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "väär";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Tagastab tõeväärtuse – kas „tõene“ või „väär“.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "tõene";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Tagastab „tõene“, kui avaldiste väärtused on võrdsed.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Tagastab „tõene“, kui esimese avaldise väärtus on suurem kui teise väärtus.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Tagastab „tõene“, kui esimese avaldise väärtus on suurem või võrdne teise väärtusega.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Tagastab „tõene“, kui esimese avaldise väärtus on väiksem kui teise väärtus.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Tagastab „tõene“, kui esimese avaldise väärtus on väiksem või võrdne teise väärtusega.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Tagastab „tõene“, kui avaldiste väärtused pole võrdsed.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "pole %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Tagastab „tõene“, kui avaldis on väär. Tagastab „väär“, kui avaldis on tõene.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Tagastab nulli.";
Blockly.Msg.LOGIC_OPERATION_AND = "ja";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "või";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Tagastab „tõene“, kui mõlemad avaldised on tõesed.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Tagastab „tõene“, kui vähemalt üks avaldistest on tõene.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "tingimus";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "kui väär";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "kui tõene";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kui tingimuse väärtus on tõene, tagastab „kui tõene“ väärtuse, vastasel juhul „kui väär“ väärtuse.";
Blockly.Msg.LORA_ACTIVATION = "Activation";  // untranslated
Blockly.Msg.LORA_ACTIVATION_DATA = "Node activation data:";  // untranslated
Blockly.Msg.LORA_ADR = "Adaptative Data Rate";  // untranslated
Blockly.Msg.LORA_BAND = "Band";  // untranslated
Blockly.Msg.LORA_CONFIG_RETX = "Retransmissions";  // untranslated
Blockly.Msg.LORA_CONFIG_TITLE = "LoRa WAN configuration ...";  // untranslated
Blockly.Msg.LORA_CONFIRMED = "confirmed";  // untranslated
Blockly.Msg.LORA_DR = "Data Rate";  // untranslated
Blockly.Msg.LORA_FRAME = " frame to port ";  // untranslated
Blockly.Msg.LORA_FREQ = "Frequency";  // untranslated
Blockly.Msg.LORA_GATEWAY = "1-channel gateway";  // untranslated
Blockly.Msg.LORA_GET_ABP_DATA_HELP = "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an ABP node. If you want to use it, please click the 'Get data' button to get the personalization data.";  // untranslated
Blockly.Msg.LORA_GET_DATA = "Get data ...";  // untranslated
Blockly.Msg.LORA_GET_OTAA_DATA_HELP = "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an OTAA node. If you want to use it, please click the 'Get data' button to get the activation data.";  // untranslated
Blockly.Msg.LORA_GET_PAYLOAD = "get payload from received frame";  // untranslated
Blockly.Msg.LORA_GET_PORT = "get port from received frame";  // untranslated
Blockly.Msg.LORA_INVALID = "Invalid %1 value.";  // untranslated
Blockly.Msg.LORA_JOIN = "join";  // untranslated
Blockly.Msg.LORA_NODE = "Node";  // untranslated
Blockly.Msg.LORA_PAYLOAD = " with payload ";  // untranslated
Blockly.Msg.LORA_PERSONALIZATION_DATA = "Node personalization data:";  // untranslated
Blockly.Msg.LORA_ROLE = "Role";  // untranslated
Blockly.Msg.LORA_ROLE_GATEWAY_TITLE = "Gateway configuration:";  // untranslated
Blockly.Msg.LORA_ROLE_NODE_TITLE = "Basic node configuration:";  // untranslated
Blockly.Msg.LORA_SET_ADR = "set adaptative data rate to";  // untranslated
Blockly.Msg.LORA_SET_APPEUI = "set AppEui to";  // untranslated
Blockly.Msg.LORA_SET_APPKEY = "set AppKey to";  // untranslated
Blockly.Msg.LORA_SET_APPSKEY = "set setAppsKey to";  // untranslated
Blockly.Msg.LORA_SET_AR = "set automatic reply to";  // untranslated
Blockly.Msg.LORA_SET_DEVADDR = "set DevAddr to";  // untranslated
Blockly.Msg.LORA_SET_DEVEUI = "set DevEui to";  // untranslated
Blockly.Msg.LORA_SET_DR = "set data rate to";  // untranslated
Blockly.Msg.LORA_SET_NWKSKEY = "set NwksKey to";  // untranslated
Blockly.Msg.LORA_SET_RETX = "set retransmissions to";  // untranslated
Blockly.Msg.LORA_START_GW = "start gateway";  // untranslated
Blockly.Msg.LORA_STOP_GW = "stop gateway";  // untranslated
Blockly.Msg.LORA_TX = "transmit ";  // untranslated
Blockly.Msg.LORA_UNCONFIRMED = "unconfirmed";  // untranslated
Blockly.Msg.LOW = "low";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://et.wikipedia.org/wiki/Aritmeetika";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Tagastab kahe arvu summa.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Tagastab kahe arvu jagatise.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Tagastab kahe arvu vahe.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Tagastab kahe arvu korrutise.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Tagastab esimese arvu teise arvu astmes.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "muuda %1 %2 võrra";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Lisab arvu muutujale '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Tagastab ühe konstantidest: π (3,141…), e (2,718…), φ (1.618…), √2) (1,414…), √½ (0,707…), või ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "%1 piirang %2 ja %3 vahele";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Piirab arvu väärtuse toodud piiridesse (piirarvud kaasa arvatud).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "jagub arvuga";
Blockly.Msg.MATH_IS_EVEN = "on paarisarv";
Blockly.Msg.MATH_IS_NEGATIVE = "on negatiivne arv";
Blockly.Msg.MATH_IS_ODD = "on paaritu arv";
Blockly.Msg.MATH_IS_POSITIVE = "on positiivne arv";
Blockly.Msg.MATH_IS_PRIME = "on algarv";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollib kas arv on paarisarv, paaritu arv, algarv, täisarv, positiivne, negatiivne või jagub kindla arvuga. Tagastab „tõene“ või „väär“.";
Blockly.Msg.MATH_IS_WHOLE = "on täisarv";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "%1 ÷ %2 jääk";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Tagastab esimese numbri teisega jagamisel tekkiva jäägi.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://et.wikipedia.org/wiki/Arv";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Arv.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "loendi keskmine";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "loendi maksimum";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "loendi mediaan";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "loendi miinimum";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "loendi moodid";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "juhuslik element loendist";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "loendi standardhälve";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "loendi summa";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Tagastab loendis olevate arvväärtuste aritmeetilise keskmise.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Tagastab suurima loendis oleva arvu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Tagastab väikseima loendis oleva arvu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Tagastab loendi kõige sagedamini esinevate loendi liikmetega.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Tagastab juhusliku elemendi loendist.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Tagastab loendi standardhälbe.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Tagastab kõigi loendis olevate arvude summa.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "juhuslik murdosa";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Tagastab juhusliku murdosa 0.0 (kaasa arvatud) and 1.0 (välja arvatud) vahel.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "juhuslik täisarv %1 ja %2 vahel";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Tagastab juhusliku täisarvu toodud piiride vahel (piirarvud kaasa arvatud).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "ümarda";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "ümarda alla";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "ümarda üles";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Ümardab arvu üles või alla.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://et.wikipedia.org/wiki/Ruutjuur";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluutväärtus";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "ruutjuur";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Tagastab arvu absoluutväärtuse.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Tagasta e arvu astmes.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Tagastab arvu naturaallogaritmi.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Tagastab arvu kümnendlogaritm.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Tagastab arvu vastandväärtuse.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Tagastab 10 arvu astmes.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Tagastab arvu ruutjuure.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://et.wikipedia.org/wiki/Trigonomeetrilised_funktsioonid";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Tagastab arvu arkuskoosiinuse.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Tagastab arvu arkussiinuse.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Tagastab arvu arkustangensi.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Tagastab arvu (kraadid) kosiinuse.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Tagastab arvu (kraadid) siinuse.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Tagastab arvu (kraadid) tangensi.";
Blockly.Msg.MHZ = "MHz";  // untranslated
Blockly.Msg.MQTT_CONFIG_TITLE = "Configure MQTT client ...";  // untranslated
Blockly.Msg.MQTT_GET_DATA = "Get data ...";  // untranslated
Blockly.Msg.MQTT_GET_DATA_HELP = "The Whitecat IDE offer to its users a MQTT broquer for testing purposes. If you want to use it, please click the 'Get data' button to get the connection data.";  // untranslated
Blockly.Msg.MQTT_GET_LEN = "get length of the received message";  // untranslated
Blockly.Msg.MQTT_GET_PAYLOAD = "get the received message";  // untranslated
Blockly.Msg.MQTT_INVALID = "Invalid value %1.";  // untranslated
Blockly.Msg.MQTT_PUBLISH = "publish";  // untranslated
Blockly.Msg.MQTT_QOS = "with";  // untranslated
Blockly.Msg.MQTT_SUBSCRIBE = "when a message is received to topic";  // untranslated
Blockly.Msg.MQTT_TO_TOPIC = "to topic";  // untranslated
Blockly.Msg.NEW_CAN_FRAME = "New frame ...";  // untranslated
Blockly.Msg.NEW_CAN_FRAME_TITLE = "New frame ...";  // untranslated
Blockly.Msg.NEW_EVENT = "New event ...";  // untranslated
Blockly.Msg.NEW_EVENT_TITLE = "New event ...";  // untranslated
Blockly.Msg.NEW_SENSOR = "Create new sensor...";  // untranslated
Blockly.Msg.NEW_SENSOR_SELECT_ONE = "(select one)";  // untranslated
Blockly.Msg.NEW_SENSOR_TITLE = "New sensor ...";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Uus muutuja ...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Uue muutuja nimi:";
Blockly.Msg.NO = "No";  // untranslated
Blockly.Msg.ONLY_ALLOWED_WITHIN_BLOCK = "Warning: This block may only be used within a \"%1\" block";  // untranslated
Blockly.Msg.ON_EVERY_RECEIVED_LORA_FRAME = "a LoRa WAN frame is received";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.OUTPUT = "output";  // untranslated
Blockly.Msg.OUTPUT_PINS = "output pin";  // untranslated
Blockly.Msg.PERCENT = "%";  // untranslated
Blockly.Msg.PING28015 = "PING))) 28015";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "kood plokis";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "sisenditega:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Käivitab kasutaja defineeritud funktsiooni '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "sisenditega:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Tekita '%1' plokk";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Funktsiooni kirjeldus ...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "teeme midagi";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "funktsioon";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Tekitab funktsiooni, mis ei tagasta midagi.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "tagasta";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Tekitab funktsiooni, mis tagastab midagi.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Hoiatus: Sel funktsioonil on mitu sama nimega sisendit.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Tõsta funktsiooni definitsioon esile";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Kui väärtus on tõene, tagastatakse teine väärtus.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Hoiatus: Seda plokki saab kasutada ainult funktsiooni definitsioonis.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "sisend nimega:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Lisab funktsioonile sisendi.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "sisendid";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Funktsiooni sisendite lisamine, eemaldamine või järjestuse muutmine.";
Blockly.Msg.PUSH_SWITCH = "Push switch";  // untranslated
Blockly.Msg.PWM_PINS = "pwm pin";  // untranslated
Blockly.Msg.REDO = "Tee uuesti";
Blockly.Msg.REL_ROT_ENCODER = "Relative rotary encoder";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Eemalda kommentaar";
Blockly.Msg.REMOVE_SENSOR = "Remove sensor ...";  // untranslated
Blockly.Msg.RENAME_CAN_FRAME = "Rename frame...";  // untranslated
Blockly.Msg.RENAME_EVENT = "Rename event...";  // untranslated
Blockly.Msg.RENAME_SENSOR = "Renane sensor ...";  // untranslated
Blockly.Msg.RENAME_VARIABLE = "Nimeta muutuja ümber ...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Muutuja „%1“ uus nimi:";
Blockly.Msg.S2Y0A21 = "Sharp 2Y0A21";  // untranslated
Blockly.Msg.SENSOR = "Sensor";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE = "acquire data from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_ACQUIRE_TOOLTIP = "Acquire data from sensor.";  // untranslated
Blockly.Msg.SENSOR_ALREADY_EXISTS = "A sensor named '%1' already exists.";  // untranslated
Blockly.Msg.SENSOR_ATTACH = "attach %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_ATTACH_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_ATTACH_TOOLTIP = "Attach sensor to its hardware interface.";  // untranslated
Blockly.Msg.SENSOR_CANCEL = "Cancel";  // untranslated
Blockly.Msg.SENSOR_CATEGORY = "Category";  // untranslated
Blockly.Msg.SENSOR_CREATE = "Create";  // untranslated
Blockly.Msg.SENSOR_DEFAULT_NAME = "sensor";  // untranslated
Blockly.Msg.SENSOR_DEVICE_ADDR = "Adress on bus";  // untranslated
Blockly.Msg.SENSOR_DEVICE_ID = "Identifier on bus";  // untranslated
Blockly.Msg.SENSOR_DISCOVER = "Discover on bus";  // untranslated
Blockly.Msg.SENSOR_INT_ATTACHED = "%1 attached at";  // untranslated
Blockly.Msg.SENSOR_NAME = "Name in the workspace";  // untranslated
Blockly.Msg.SENSOR_READ1 = "read ";  // untranslated
Blockly.Msg.SENSOR_READ2 = " from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_READ_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_READ_TOOLTIP = "Read data from sensor.";  // untranslated
Blockly.Msg.SENSOR_REMOVE_CONFIRM = "Do you want to remove %1 sensor from your project?";  // untranslated
Blockly.Msg.SENSOR_SET1 = "set ";  // untranslated
Blockly.Msg.SENSOR_SET2 = " with value ";  // untranslated
Blockly.Msg.SENSOR_SET3 = " for %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_SET_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_SET_TOOLTIP = "Set configuration options for sensor.";  // untranslated
Blockly.Msg.SENSOR_WHEN1 = "when ";  // untranslated
Blockly.Msg.SENSOR_WHEN2 = " changes from %1 (%2)";  // untranslated
Blockly.Msg.SENSOR_WHEN_HELPURL = "";  // untranslated
Blockly.Msg.SENSOR_WHEN_TOOLTIP = "This block is invoked when the magnitude changes.";  // untranslated
Blockly.Msg.SERVO_ATTACH = "attach servo on pin";  // untranslated
Blockly.Msg.SERVO_ATTACH_HELPURL = "";  // untranslated
Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Attach a servo to a pin.";  // untranslated
Blockly.Msg.SERVO_CALIBRATE = "Calibrate ...";  // untranslated
Blockly.Msg.SERVO_MOVE = "move servo on pin";  // untranslated
Blockly.Msg.SERVO_MOVE_DEGREES = "degrees";  // untranslated
Blockly.Msg.SERVO_MOVE_HELPURL = "";  // untranslated
Blockly.Msg.SERVO_MOVE_TOOLTIP = "Moves the servo attached on pin by a number of degrees. If degrees are > 0 movement is clockwise, and if movement is < 0 movement is counterclockwise";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "lõppu tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "lisa muutuja";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Lisab teksti muutuja „%1“ väärtuse lõppu.";
Blockly.Msg.TEXT_CATCH_TITLE = "catch";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "väikeste tähtedega";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Suurte Esitähtedega";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "SUURTE TÄHTEDEGA";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Tagastab muudetud tähesuurusega teksti koopia.";
Blockly.Msg.TEXT_CHARAT_FIRST = "esimene sümbol";
Blockly.Msg.TEXT_CHARAT_FROM_END = "lõpust sümbol #";
Blockly.Msg.TEXT_CHARAT_FROM_START = "sümbol #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "tekstist";
Blockly.Msg.TEXT_CHARAT_LAST = "viimane sümbol";
Blockly.Msg.TEXT_CHARAT_RANDOM = "juhuslik sümbol";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Tagastab tekstis määratud asukohal oleva sümboli.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Objekti lisamine tekstile.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "ühenda";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Tekstiploki muutmine sektsioonide lisamise, eemaldamise või järjestuse muutmisega.";
Blockly.Msg.TEXT_FINALLY = "finally";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "kuni (lõpust) sümbolini #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "kuni sümbolini #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "kuni viimase sümbolini";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "tekstist";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "alates esimesest sümbolist";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "alates (lõpust) sümbolist #";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "alates sümbolist #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Tagastab määratud tüki tekstist.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "tekstist";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "esimese leitud tekstitüki";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "viimase leitud tekstitüki";
Blockly.Msg.TEXT_INDEXOF_TAIL = "asukoht";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Tagastab esimesest tekstist esimese/viimase leitud teise teksti asukoha (indeksi). Kui teksti ei leita, tagastab %1.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 on tühi";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Tagastab „tõene“, kui tekstis pole ühtegi sümbolit.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "tekita tekst";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Tekitab teksti ühendades mistahes arvu elemente.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "%1 pikkus";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Tagastab sümbolite aru (ka tühikud) toodud tekstis.";
Blockly.Msg.TEXT_PACK_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE1 = "pack hex string";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE2 = "with";  // untranslated
Blockly.Msg.TEXT_PACK_TITLE3 = "to";  // untranslated
Blockly.Msg.TEXT_PACK_TOOLTIP = "Pack a set of values into an hex's string representation.";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "trüki %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Trükib määratud teksti, numbri või mõne muu objekti väärtuse.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Küsib kasutajalt teadet näidates mingit arvu.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Küsib kasutajalt teadet näidates mingit teksti.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "kasutajalt küsitud arv teatega";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "kasutajalt küsitud tekst teatega";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Täht, sõna või rida teksti.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "mõlemalt poolt eemaldatud tühikutega";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "algusest eemaldatud tühikutega";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "lõpust eemaldatud tühikutega";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Tagastab koopia tekstist, millel on tühikud ühelt või mõlemalt poolt eemaldatud.";
Blockly.Msg.TEXT_TRY_CATCHED = "is catched";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_ERROR = "when error";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_OTHER_ERROR = "when other errors catched";  // untranslated
Blockly.Msg.TEXT_TRY_CATCH_RAISE_AGAIN = "raise catched error again";  // untranslated
Blockly.Msg.TEXT_TRY_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_TRY_TITLE = "try";  // untranslated
Blockly.Msg.TEXT_TRY_TOOLTIP = "Try to execute a set of statements and eventualy catch the errors without stop program.";  // untranslated
Blockly.Msg.TEXT_UNPACK_HELPURL = "";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE1 = "unpack hex string";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE2 = "to";  // untranslated
Blockly.Msg.TEXT_UNPACK_TITLE3 = "from";  // untranslated
Blockly.Msg.TEXT_UNPACK_TOOLTIP = "Unpack a set of values encoded into an hex's string representation.";  // untranslated
Blockly.Msg.THERMISTOR = "10K thermistor";  // untranslated
Blockly.Msg.THREAD_RETURN = "return id";  // untranslated
Blockly.Msg.TILT_SWITCH = "Tilt switch";  // untranslated
Blockly.Msg.TO = "to";  // untranslated
Blockly.Msg.TODAY = "Täna";
Blockly.Msg.TRUE = "true";  // untranslated
Blockly.Msg.UNARY_BITWISE_HELPURL = "";  // untranslated
Blockly.Msg.UNARY_BITWISE_TOOLTIP = "";  // untranslated
Blockly.Msg.UNDO = "Võta tagasi";
Blockly.Msg.UPDATE = "Update";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "objekt";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Tekita 'määra „%1“ väärtuseks' plokk";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Tagastab selle muutuja väärtuse.";
Blockly.Msg.VARIABLES_LOCAL = "local variable %1";  // untranslated
Blockly.Msg.VARIABLES_LOCAL_TOOLTIP = "Sets the scope for this variable to local.";  // untranslated
Blockly.Msg.VARIABLES_SET = "määra %1 väärtuseks %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Tekita '„%1“ väärtus' plokk";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Määrab selle muutuja väärtuse võrdseks sisendi väärtusega.";
Blockly.Msg.VARIABLE_ALREADY_EXISTS = "'%1'-nimeline muutuja on juba olemas.";
Blockly.Msg.WARNING_CAN_INVALID_DATA = "Invalid data. Must be >= 0 and <= 255.";  // untranslated
Blockly.Msg.WARNING_CAN_INVALID_LEN = "Invalid length. Must be >= 0 and <= 8.";  // untranslated
Blockly.Msg.WARNING_CAN_INVALID_TYPE = "Invalid frame type";  // untranslated
Blockly.Msg.WARNING_CATCH_ERROR_NOT_ALLOWED_HERE = "Warning: This block may only be used within a 'when error is catched' block.";  // untranslated
Blockly.Msg.WARNING_EVENTS_CAN_ONLY_PROCESSED_IN_ONE_EVENT_BLOCK = "Warning: events can only be processed in one event block.";  // untranslated
Blockly.Msg.WARNING_NOT_IN_HAT_BLOCK = "Warning: this block may only be used within a hat block.";  // untranslated
Blockly.Msg.WARNING_ONLY_ONE_INSTANCE_ALLOWED = "Warning: only one instance of this block is allowed.";  // untranslated
Blockly.Msg.WARNING_RAISE_ERROR_AGAIN_NOT_ALLOWED_HERE = "Warning: This block may only be used within a 'try catch finally' block in its catch part.";  // untranslated
Blockly.Msg.WIFI_CONFIG_TITLE = "Wi-Fi contiguration ...";  // untranslated
Blockly.Msg.WIFI_INVALID = "Invalid %1 value.";  // untranslated
Blockly.Msg.WIFI_START = "start Wi-Fi";  // untranslated
Blockly.Msg.WIFI_STOP = "stop Wi-Fi";  // untranslated
Blockly.Msg.WIFI_TYPE = "Type";  // untranslated
Blockly.Msg.WITH = "with";  // untranslated
Blockly.Msg.YES = "Yes";  // untranslated
Blockly.Msg.air_quality = "Air quality";  // untranslated
Blockly.Msg.any = "any";  // untranslated
Blockly.Msg.any_edge = "any edge";  // untranslated
Blockly.Msg.configureLora = "configure LoRa using ";  // untranslated
Blockly.Msg.configureanalogpin = "configure analog pin";  // untranslated
Blockly.Msg.configuredigitalpin = "configure digital pin";  // untranslated
Blockly.Msg.distance = "Distance";  // untranslated
Blockly.Msg.for = "for";  // untranslated
Blockly.Msg.geopos = "Geographic position";  // untranslated
Blockly.Msg.getanalogpin = "get analog pin value";  // untranslated
Blockly.Msg.getdigitalpin = "get digital pin value";  // untranslated
Blockly.Msg.getexternalanalogchannel = "get analog value from";  // untranslated
Blockly.Msg.high_level = "high level";  // untranslated
Blockly.Msg.humidity = "Humidity";  // untranslated
Blockly.Msg.hz = "hz";  // untranslated
Blockly.Msg.i2cAddress = "set address for";  // untranslated
Blockly.Msg.i2cReadFrom = "read from";  // untranslated
Blockly.Msg.i2cSetSpeedFor = "set speed for";  // untranslated
Blockly.Msg.i2cSpeed = "speed";  // untranslated
Blockly.Msg.i2cStartConditionFor = "start condition for";  // untranslated
Blockly.Msg.i2cStopConditionFor = "stop condition for";  // untranslated
Blockly.Msg.i2cWriteTo = "write to";  // untranslated
Blockly.Msg.illuminance = "Illuminance";  // untranslated
Blockly.Msg.invertdigitalpin = "invert digital pin";  // untranslated
Blockly.Msg.liquid_flow = "Liquid flow";  // untranslated
Blockly.Msg.low_level = "low level";  // untranslated
Blockly.Msg.magnetic_field = "Magnetic field";  // untranslated
Blockly.Msg.microseconds = "microseconds";  // untranslated
Blockly.Msg.milliseconds = "milliseconds";  // untranslated
Blockly.Msg.negative_edge = "negative edge";  // untranslated
Blockly.Msg.other = "Other";  // untranslated
Blockly.Msg.positive_edge = "positive edge";  // untranslated
Blockly.Msg.potentiometers = "Potentiometers";  // untranslated
Blockly.Msg.presence = "Presence";  // untranslated
Blockly.Msg.pressure = "Pressure";  // untranslated
Blockly.Msg.read = "read";  // untranslated
Blockly.Msg.rotation = "Rotation";  // untranslated
Blockly.Msg.seconds = "seconds";  // untranslated
Blockly.Msg.setdigitalpin = "set digital pin";  // untranslated
Blockly.Msg.setpwmpin = "set PWM pin";  // untranslated
Blockly.Msg.soil_moisture = "Soil moisture";  // untranslated
Blockly.Msg.switches = "Switches";  // untranslated
Blockly.Msg.temperature = "Temperature";  // untranslated
Blockly.Msg.thread_create = "create thread";  // untranslated
Blockly.Msg.thread_resume = "resume thread";  // untranslated
Blockly.Msg.thread_sleep = "sleep";  // untranslated
Blockly.Msg.thread_start = "start thread";  // untranslated
Blockly.Msg.thread_stop = "stop thread";  // untranslated
Blockly.Msg.thread_suspend = "suspend thread";  // untranslated
Blockly.Msg.uv = "UV";  // untranslated
Blockly.Msg.wait_for = "wait";  // untranslated
Blockly.Msg.write = "write";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;