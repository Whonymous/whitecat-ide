{
	"@metadata": {
		"author": "Ellen Spertus <ellen.spertus@gmail.com>",
		"lastupdated": "2016-11-11 17:20:20.186308",
		"locale": "en",
		"messagedocumentation" : "qqq"
	},
	"VARIABLES_DEFAULT_NAME": "item",
	"TODAY": "Today",
	"DUPLICATE_BLOCK": "Duplicate",
	"ADD_COMMENT": "Add Comment",
	"REMOVE_COMMENT": "Remove Comment",
	"EXTERNAL_INPUTS": "External Inputs",
	"INLINE_INPUTS": "Inline Inputs",
	"DELETE_BLOCK": "Delete Block",
	"DELETE_X_BLOCKS": "Delete %1 Blocks",
	"DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
	"CLEAN_UP": "Clean up Blocks",
	"COLLAPSE_BLOCK": "Collapse Block",
	"COLLAPSE_ALL": "Collapse Blocks",
	"EXPAND_BLOCK": "Expand Block",
	"EXPAND_ALL": "Expand Blocks",
	"DISABLE_BLOCK": "Disable Block",
	"ENABLE_BLOCK": "Enable Block",
	"HELP": "Help",
	"UNDO": "Undo",
	"REDO": "Redo",
	"CHANGE_VALUE_TITLE": "Change value:",
	"RENAME_VARIABLE": "Rename variable...",
	"RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
	"NEW_VARIABLE": "Create variable...",
	"NEW_VARIABLE_TITLE": "New variable name:",
	"VARIABLE_ALREADY_EXISTS": "A variable named '%1' already exists.",
	"DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the '%2' variable?",
	"DELETE_VARIABLE": "Delete the '%1' variable",
	"COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
	"COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
	"COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
	"COLOUR_RANDOM_TITLE": "random colour",
	"COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
	"COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
	"COLOUR_RGB_TITLE": "colour with",
	"COLOUR_RGB_RED": "red",
	"COLOUR_RGB_GREEN": "green",
	"COLOUR_RGB_BLUE": "blue",
	"COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
	"COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
	"COLOUR_BLEND_TITLE": "blend",
	"COLOUR_BLEND_COLOUR1": "colour 1",
	"COLOUR_BLEND_COLOUR2": "colour 2",
	"COLOUR_BLEND_RATIO": "ratio",
	"COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
	"CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
	"CONTROLS_REPEAT_TITLE": "repeat %1 times",
	"CONTROLS_REPEAT_INPUT_DO": "do",
	"CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
	"CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
	"CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
	"CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
	"CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
	"CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
	"CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
	"CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
	"CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
	"CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
	"CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
	"CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
	"CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
	"CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
	"CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
	"CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
	"CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
	"CONTROLS_IF_MSG_IF": "if",
	"CONTROLS_IF_MSG_ELSEIF": "else if",
	"CONTROLS_IF_MSG_ELSE": "else",
	"CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
	"CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
	"CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
	"LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
	"LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
	"LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
	"LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
	"LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
	"LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
	"LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
	"LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
	"LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
	"LOGIC_OPERATION_AND": "and",
	"LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
	"LOGIC_OPERATION_OR": "or",
	"LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
	"LOGIC_NEGATE_TITLE": "not %1",
	"LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
	"LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
	"LOGIC_BOOLEAN_TRUE": "true",
	"LOGIC_BOOLEAN_FALSE": "false",
	"LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
	"LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
	"LOGIC_NULL": "null",
	"LOGIC_NULL_TOOLTIP": "Returns null.",
	"LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
	"LOGIC_TERNARY_CONDITION": "test",
	"LOGIC_TERNARY_IF_TRUE": "if true",
	"LOGIC_TERNARY_IF_FALSE": "if false",
	"LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.",
	"MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
	"MATH_NUMBER_TOOLTIP": "A number.",
	"MATH_ADDITION_SYMBOL": "+",
	"MATH_SUBTRACTION_SYMBOL": "-",
	"MATH_DIVISION_SYMBOL": "÷",
	"MATH_MULTIPLICATION_SYMBOL": "×",
	"MATH_POWER_SYMBOL": "^",
	"MATH_TRIG_SIN": "sin",
	"MATH_TRIG_COS": "cos",
	"MATH_TRIG_TAN": "tan",
	"MATH_TRIG_ASIN": "asin",
	"MATH_TRIG_ACOS": "acos",
	"MATH_TRIG_ATAN": "atan",
	"MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
	"MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
	"MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
	"MATH_SINGLE_OP_ROOT": "square root",
	"MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
	"MATH_SINGLE_OP_ABSOLUTE": "absolute",
	"MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
	"MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
	"MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
	"MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
	"MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
	"MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
	"MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
	"MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
	"MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
	"MATH_CONSTANT_TOOLTIP": "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).",
	"MATH_IS_EVEN": "is even",
	"MATH_IS_ODD": "is odd",
	"MATH_IS_PRIME": "is prime",
	"MATH_IS_WHOLE": "is whole",
	"MATH_IS_POSITIVE": "is positive",
	"MATH_IS_NEGATIVE": "is negative",
	"MATH_IS_DIVISIBLE_BY": "is divisible by",
	"MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
	"MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
	"MATH_CHANGE_TITLE": "change %1 by %2",
	"MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
	"MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
	"MATH_ROUND_TOOLTIP": "Round a number up or down.",
	"MATH_ROUND_OPERATOR_ROUND": "round",
	"MATH_ROUND_OPERATOR_ROUNDUP": "round up",
	"MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
	"MATH_ONLIST_HELPURL": "",
	"MATH_ONLIST_OPERATOR_SUM": "sum of list",
	"MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
	"MATH_ONLIST_OPERATOR_MIN": "min of list",
	"MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
	"MATH_ONLIST_OPERATOR_MAX": "max of list",
	"MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
	"MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
	"MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
	"MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
	"MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
	"MATH_ONLIST_OPERATOR_MODE": "modes of list",
	"MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
	"MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
	"MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
	"MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
	"MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
	"MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
	"MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
	"MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
	"MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_%28graphics%29",
	"MATH_CONSTRAIN_TITLE": "constrain %1 low %2 high %3",
	"MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
	"MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
	"MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
	"MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
	"MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
	"TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
	"TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
	"TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
	"TEXT_JOIN_TITLE_CREATEWITH": "create text with",
	"TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
	"TEXT_CREATE_JOIN_TITLE_JOIN": "join",
	"TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
	"TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
	"TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_APPEND_TO": "to",
	"TEXT_APPEND_APPENDTEXT": "append text",
	"TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
	"TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_LENGTH_TITLE": "length of %1",
	"TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
	"TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
	"TEXT_ISEMPTY_TITLE": "%1 is empty",
	"TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
	"TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
	"TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",
	"TEXT_INDEXOF_INPUT_INTEXT": "in text",
	"TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
	"TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
	"TEXT_INDEXOF_TAIL": "",
	"TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
	"TEXT_CHARAT_INPUT_INTEXT": "in text",
	"TEXT_CHARAT_FROM_START": "get letter #",
	"TEXT_CHARAT_FROM_END": "get letter # from end",
	"TEXT_CHARAT_FIRST": "get first letter",
	"TEXT_CHARAT_LAST": "get last letter",
	"TEXT_CHARAT_RANDOM": "get random letter",
	"TEXT_CHARAT_TAIL": "",
	"TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
	"TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
	"TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
	"TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
	"TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
	"TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
	"TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
	"TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
	"TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
	"TEXT_GET_SUBSTRING_END_LAST": "to last letter",
	"TEXT_GET_SUBSTRING_TAIL": "",
	"TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
	"TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
	"TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
	"TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
	"TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
	"TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
	"TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
	"TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
	"TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
	"TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
	"TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_PRINT_TITLE": "print %1",
	"TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
	"TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
	"TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
	"TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
	"TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
	"TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
	"LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
	"LISTS_CREATE_EMPTY_TITLE": "create empty list",
	"LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
	"LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
	"LISTS_CREATE_WITH_INPUT_WITH": "create list with",
	"LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
	"LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
	"LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
	"LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
	"LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
	"LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
	"LISTS_LENGTH_TITLE": "length of %1",
	"LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
	"LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
	"LISTS_ISEMPTY_TITLE": "%1 is empty",
	"LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
	"LISTS_INLIST": "in list",
	"LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
	"LISTS_INDEX_OF_FIRST": "find first occurrence of item",
	"LISTS_INDEX_OF_LAST": "find last occurrence of item",
	"LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.",
	"LISTS_GET_INDEX_GET": "get",
	"LISTS_GET_INDEX_GET_REMOVE": "get and remove",
	"LISTS_GET_INDEX_REMOVE": "remove",
	"LISTS_GET_INDEX_FROM_START": "#",
	"LISTS_GET_INDEX_FROM_END": "# from end",
	"LISTS_GET_INDEX_FIRST": "first",
	"LISTS_GET_INDEX_LAST": "last",
	"LISTS_GET_INDEX_RANDOM": "random",
	"LISTS_GET_INDEX_TAIL": "",
	"LISTS_INDEX_FROM_START_TOOLTIP": "%1 is the first item.",
	"LISTS_INDEX_FROM_END_TOOLTIP": "%1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM": "Returns the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "Removes and returns the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "Removes the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
	"LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
	"LISTS_SET_INDEX_SET": "set",
	"LISTS_SET_INDEX_INSERT": "insert at",
	"LISTS_SET_INDEX_INPUT_TO": "as",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM": "Sets the item at the specified position in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "Inserts the item at the specified position in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
	"LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
	"LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
	"LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
	"LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
	"LISTS_GET_SUBLIST_END_FROM_START": "to #",
	"LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
	"LISTS_GET_SUBLIST_END_LAST": "to last",
	"LISTS_GET_SUBLIST_TAIL": "",
	"LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
	"LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
	"LISTS_SORT_TITLE": "sort %1 %2 %3",
	"LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
	"LISTS_SORT_ORDER_ASCENDING": "ascending",
	"LISTS_SORT_ORDER_DESCENDING": "descending",
	"LISTS_SORT_TYPE_NUMERIC": "numeric",
	"LISTS_SORT_TYPE_TEXT": "alphabetic",
	"LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
	"LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
	"LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
	"LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
	"LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
	"LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
	"LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
	"ORDINAL_NUMBER_SUFFIX": "",
	"VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
	"VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
	"VARIABLES_GET_CREATE_SET": "Create 'set %1'",
	"VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
	"VARIABLES_SET": "set %1 to %2",
	"VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
	"VARIABLES_SET_CREATE_GET": "Create 'get %1'",
	"PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFNORETURN_TITLE": "to",
	"PROCEDURES_DEFNORETURN_PROCEDURE": "do something",
	"PROCEDURES_BEFORE_PARAMS": "with:",
	"PROCEDURES_CALL_BEFORE_PARAMS": "with:",
	"PROCEDURES_DEFNORETURN_DO": "",
	"PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
	"PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
	"PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_DEFRETURN_RETURN": "return",
	"PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
	"PROCEDURES_ALLOW_STATEMENTS": "allow statements",
	"PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
	"PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
	"PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29",
	"PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
	"PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
	"PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
	"PROCEDURES_MUTATORARG_TITLE": "input name:",
	"PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
	"PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
	"PROCEDURES_CREATE_DO": "Create '%1'",
	"PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
	"PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
	"PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",

	"INPUT" : "input",
	"OUTPUT" : "output",
	"HIGH" : "high",
	"LOW" : "low",
	"AS" : "as",
	"WITH" : "with",
	"configuredigitalpin" : "configure digital pin",
	"configureanalogpin" : "configure analog pin",
	"BITSOFRESOLUTION" : "bits of resolution",
	"setdigitalpin" : "set digital pin",
	"invertdigitalpin" : "invert digital pin",
	"TO" : "to",
	"getdigitalpin" : "get digital pin value",
	"getanalogpin" : "get analog pin value",
	"getexternalanalogchannel" : "get analog value from",
	"thread_start" : "start thread",
	"microseconds" : "microseconds",
	"milliseconds" : "milliseconds",
	"seconds" : "seconds",
	"thread_sleep" : "sleep",
	"wait_for" : "wait",
	"THREAD_RETURN" : "return id",
	"thread_create" : "create thread",
	"thread_suspend" : "suspend thread",
	"thread_resume" : "resume thread",
	"thread_stop" : "stop thread",
	"setpwmpin" : "set PWM pin",
	"FREQUENCY" : "to frequency",
	"HERTZS" : "hertzs",
	"DUTY" : "and duty",
	"PERCENT" : "%",
	"i2cSpeed" : "speed",
	"Khz" : "Khz",
	"hz": "hz",
	"i2cStartConditionFor" : "start condition for",
	"i2cStopConditionFor" : "stop condition for",
	"i2cAddress" : "set address for",
	"for" : "for",
	"read" : "read",
	"write" : "write",
	"i2cReadFrom" : "read from",
	"i2cWriteTo" : "write to",
	"i2cSetSpeedFor": "set speed for",

	"BITLOGIC_MSB_HELPURL" : "",
	"BITLOGIC_MSB_TITLE" : "MSB %1",
	"BITLOGIC_MSB_TOOLTIP" : "Returns the MSB (most significant byte) of the input.",

	"BITLOGIC_LSB_HELPURL" : "",
	"BITLOGIC_LSB_TITLE" : "LSB %1",
	"BITLOGIC_LSB_TOOLTIP" : "Returns the LSB (less significant byte) of the input.",

	"TEXT_PACK_HELPURL" : "",
	"TEXT_PACK_TITLE1" : "pack hex string",
	"TEXT_PACK_TITLE2" : "with",
	"TEXT_PACK_TITLE3" : "to",
	"TEXT_PACK_TOOLTIP" : "Pack a set of values into an hex's string representation.",
	"TEXT_UNPACK_HELPURL" : "",
	"TEXT_UNPACK_TITLE1" : "unpack hex string",
	"TEXT_UNPACK_TITLE2" : "to",
	"TEXT_UNPACK_TITLE3" : "from",
	"TEXT_UNPACK_TOOLTIP" : "Unpack a set of values encoded into an hex's string representation.",
	"TEXT_TRY_HELPURL" : "",
	"TEXT_TRY_TITLE" : "try",
	"TEXT_CATCH_TITLE" : "catch",
	"TEXT_FINALLY" : "finally",
	"TEXT_TRY_TOOLTIP" : "Try to execute a set of statements and eventualy catch the errors without stop program.",
	"TEXT_TRY_CATCH_ERROR" : "when error",
	"TEXT_TRY_CATCH_OTHER_ERROR" : "when other errors catched",
	"TEXT_TRY_CATCHED": "is catched",
	"TEXT_TRY_CATCH_RAISE_AGAIN" : "raise catched error again",
	"DO": "do",
	"configureLora" : "configure LoRa using ",
	"MHZ" : "Mhz",
	"LORA_GET_PORT" : "get port from received frame",
	"LORA_GET_PAYLOAD" : "get payload from received frame",
	"LORA_TX" : "transmit ",
	"LORA_CONFIRMED" : "confirmed",
	"LORA_UNCONFIRMED" : "unconfirmed",
	"LORA_FRAME" : " frame to port ",
	"LORA_PAYLOAD" : " with payload ",
	"LORA_SET_DEVADDR" : "set DevAddr to",
	"LORA_SET_NWKSKEY" : "set NwksKey to",
	"LORA_SET_APPSKEY" : "set setAppsKey to",
	"LORA_SET_APPEUI" : "set AppEui to",
	"LORA_SET_DEVEUI" : "set DevEui to",
	"LORA_SET_APPKEY" : "set AppKey to",
	"LORA_SET_RETX" : "set retransmissions to",
	"LORA_SET_ADR" : "set adaptative data rate to",
	"LORA_SET_AR" : "set automatic reply to",
	"LORA_SET_DR" : "set data rate to",
	"LORA_JOIN" : "join",
	"TRUE" : "true",
	"FALSE" : "false",
	"BAND" : "band",
	"ON_EVERY_RECEIVED_LORA_FRAME" : "a LoRa WAN frame is received",
	"CPU_SLEEP" : "sleep CPU",
	"SENSOR_ALREADY_EXISTS": "A sensor named '%1' already exists.",
	"NEW_SENSOR_SELECT_ONE": "(select one)",
	"SENSOR": "Sensor",
	"SENSOR_INT_ATTACHED": "%1 attached at",
	"NEW_SENSOR_TITLE": "New sensor ...",
	"SENSOR_CREATE": "Create",
	"SENSOR_CANCEL": "Cancel",
	"NEW_SENSOR": "Create new sensor...",
	"RENAME_SENSOR": "Renane sensor ...",
	"DELETE_SENSOR": "Delete the '%1' sensor",
	"SENSOR_NAME": "Name in the workspace",
	"SENSOR_ACQUIRE_HELPURL": "",
	"SENSOR_ACQUIRE_TOOLTIP": "Acquire data from sensor.",
	"SENSOR_READ_HELPURL": "",
	"SENSOR_READ_TOOLTIP": "Read data from sensor.",
	"SENSOR_READ1": "read ",
	"SENSOR_READ2": " from %1 (%2)",
	"SENSOR_DEFAULT_NAME": "sensor",
	"SENSOR_ACQUIRE": "acquire data from %1 (%2)",
	"SENSOR_SET_HELPURL": "",
	"SENSOR_SET_TOOLTIP": "Set configuration options for sensor.",
	"SENSOR_SET1": "set ",
	"SENSOR_SET2": " with value ",
	"SENSOR_SET3": " for %1 (%2)",
	"SENSOR_ATTACH_HELPURL": "",
	"SENSOR_ATTACH_TOOLTIP": "Attach sensor to its hardware interface.",
	"SENSOR_ATTACH": "attach %1 (%2)",
	"SENSOR_REMOVE_CONFIRM": "Do you want to remove %1 sensor from your project?",
	"ERROR": "Error",
	"EDIT_SENSOR_TITLE": "Edit sensor ...",
	"EDIT_SENSOR": "Edit sensor ...",
	"REMOVE_SENSOR": "Remove sensor ...",
	"UPDATE": "Update",
	"YES": "Yes",
	"NO": "No",

	"DEFAULT_EVENT": "event",
	"NEW_EVENT": "New event ...",
	"EDIT_EVENT_TITLE": "Edit event ...",	
	"NEW_EVENT_TITLE": "New event ...",
	"EVENT_CREATE": "Creeate event ...",
	"EVENT_ALREADY_EXISTS": "An event named '%1' already exists.",
	"EVENT_CANCEL": "Cancel",
	"EVENT_NAME": "Event name",
	"RENAME_EVENT": "Rename event...",
	"DELETE_EVENT": "Delete the '%1' event",
	"EVENT_CANNOT_REMOVE": "This event cannot remove.",
	"EVENT_CANNOT_RENAME": "This event cannot rename.",
	
	"EVENT_BROADCAST": "broadcast",
	"EVENT_BROADCAST_TOOLTIP": "Sends a broadcast, activating When I Receive blocks that are set to that broadcast.",
	"EVENT_BROADCAST_HELPURL": "",
	"EVENT_BROADCAST_AND_WAIT": "and wait",
	"EVENT_BROADCAST_AND_WAIT_TOOLTIP": "Sends a broadcast, activating When I Receive blocks that are set to that broadcast, and pauses until all scripts activated by the broadcast are completed",
	"EVENT_WHEN_I_RECEIVE": "when I receive",
	"EVENT_WHEN_I_RECEIVE_TOOLTIP": "This block will be invoked once the specified broadcast has been sent by an other script.",
	"EVENT_WHEN_I_RECEIVE_HELPURL": "",
	"EVENT_WHEN_BOARD_STARTS": "when board starts",
	"EVENT_WHEN_BOARD_STARTS_TOOLTIP": "This block is invoked at board startup. Tipically is used for initialize other blocks, and broadcast events.",
	"EVENT_WHEN_BOARD_STARTS_HELPURL": "",
	"EVENT_WHEN_I_RECEIVE_A_LORA_FRAME": "when I receive a LoRa frame",
	"EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_TOOLTIP": "This block is invoked when a LoRa frame is received.",
	"EVENT_WHEN_I_RECEIVE_A_LORA_FRAME_HELPURL": "",
	"SERVO_ATTACH": "attach servo on pin",
	"SERVO_ATTACH_TOOLTIP": "Attach a servo to a pin.",
	"SERVO_ATTACH_HELPURL": "",
	"SERVO_MOVE": "move servo on pin",
	"SERVO_MOVE_TOOLTIP": "Moves the servo attached on pin by a number of degrees. If degrees are > 0 movement is clockwise, and if movement is < 0 movement is counterclockwise",
	"SERVO_MOVE_HELPURL": "",
	"SERVO_MOVE_DEGREES": "degrees",
	"SERVO_CALIBRATE": "Calibrate ...",
	"CONFIGURE_LORA": "Configure LoRa...",
	"CONFIGURE_WIFI_STA": "Configure WIFI station...",
	"CREATE_MQTT": "Configure MQTT client...",
	"CONFIGURE": "Configure",
	"CANCEL": "Cancel",
	"LORA_BAND": "Band",
	"LORA_DR": "Data Rate",
	"LORA_ADR": "Adaptative Data Rate",
	"LORA_CONFIG_TITLE": "LoRa WAN configuration ...",
	"LORA_CONFIG_RETX": "Retransmissions",
	"LORA_ACTIVATION": "Activation",
	"LORA_INVALID": "Invalid %1 value.",
	"IN": "in",
	"CONFIGURE_WIFI": "Configure...",
	"WIFI_TYPE": "Type",
	"WIFI_CONFIG_TITLE": "Wi-Fi contiguration ...",
	"CONFIGURE": "Configure",
	"WIFI_INVALID": "Invalid %1 value.",
	"WIFI_START": "start Wi-Fi",
	"WIFI_STOP": "stop Wi-Fi",
	"CONFIGURE_MQTT": "Configure client...",
	"MQTT_CONFIG_TITLE": "Configure MQTT client ...",
	"MQTT_INVALID": "Invalid value %1.",
	"MQTT_PUBLISH": "publish",
	"MQTT_TO_TOPIC": "to topic",
	"MQTT_QOS": "with",
	"MQTT_SUBSCRIBE": "when a message is received to topic",
	"MQTT_GET_LEN": "get length of the received message",
	"MQTT_GET_PAYLOAD": "get the received message",
	"EVENT_IS_BEING_PROCESSED_P": "",
	"EVENT_IS_BEING_PROCESSED": "is being processed?",
	"EVENT_IS_BEING_PROCESSED_TOOLTIP": "",
	"EVENT_IS_BEING_PROCESSED_HELPURL": "",
	"EVENT_WHEN_DIGITAL_PIN": "when digital pin",
	"EVENT_WHEN_DIGITAL_CHANGES": "changes at",
	"EVENT_WHEN_DIGITAL_PIN_TOOLTIP": "",
	"EVENT_WHEN_DIGITAL_PIN_HELPURL": "",
	"positive_edge": "positive edge",
	"negative_edge": "negative edge",
	"any_edge": "any edge",
	"low_level": "low level",
	"high_level": "high level",
	
	"WARNING_ONLY_ONE_INSTANCE_ALLOWED": "Warning: only one instance of this block is allowed.",
	"WARNING_EVENTS_CAN_ONLY_PROCESSED_IN_ONE_EVENT_BLOCK": "Warning: events can only be processed in one event block.",
	"WARNING_NOT_IN_HAT_BLOCK": "Warning: this block may only be used within a hat block.",

	"any": "any",
	"SENSOR_DEVICE_ID": "Identifier on bus",
	"SENSOR_DEVICE_ADDR": "Adress on bus",
	"SENSOR_DISCOVER": "Discover on bus",

	"DELETE_FILE":"Delete",
	"DELETE_FILE_CONFIRM":"Do you want to delete %1?",
	"FILE_DELETED": "%1 has been deleted.",
	
	"SENSOR_CATEGORY": "Category",
	"THERMISTOR":"10K thermistor",
	"S2Y0A21":"Sharp 2Y0A21",
	"PING28015":"PING))) 28015",
	"GPS":"NMEA GPS",
	"AM412":"PIR - AM412",
	"HALL_SWITCH":"Hall effect switch",
	"PUSH_SWITCH":"Push switch",
	"TILT_SWITCH":"Tilt switch",
	"distance":"Distance",
	"geopos":"Geographic position",
	"humidity":"Humidity",
	"presence":"Presence",
	"pressure":"Pressure",
	"switches":"Switches",
	"temperature":"Temperature",
	"magnetic_field":"Magnetic field",
	"soil_moisture":"Soil moisture",
	"liquid_flow":"Liquid flow",
	"HALL_FLOW": "Flow by hall effect",
	
	"SENSOR_WHEN_HELPURL": "",
	"SENSOR_WHEN_TOOLTIP": "This block is invoked when the magnitude changes.",
	"SENSOR_WHEN1": "when ",
	"SENSOR_WHEN2": " changes from %1 (%2)",
	
	"EVENT_EVERY": "every",
	"EVENT_EVERY_TOOLTIP": "This block is invoked at regular time intervals.",
	"EVENT_EVERY_HELPURL": "",
	
	"CAN_SET_SPEED": "set speed for",
	"CAN_SET_SPEED_TOOLTIP": "Set speed for CAN bus.",
	"CAN_SET_SPEED_HELPURL": "",
	"CAN_READ": "read from ",
	"CAN_READ_TOOLTIP": "Read a frame from the CAN bus.",
	"CAN_READ_HELPURL": "",
	"CAN_GET": "get",
	"CAN_GET_FROM_FRAME": "from",
	"CAN_GET_TO_FRAME": "to",
	"CAN_GET_TOOLTIP": "",
	"CAN_GET_HELPURL": "Get a field value from a CAN frame.",	
	"CAN_GET_IDENTIFIER": "identifier", 
	"CAN_GET_TYPE": "type",
	"CAN_GET_LEN": "length",
	"CAN_GET_D0": "data 0",
	"CAN_GET_D1": "data 1",
	"CAN_GET_D2": "data 2",
	"CAN_GET_D3": "data 3",
	"CAN_GET_D4": "data 4",
	"CAN_GET_D5": "data 5",
	"CAN_GET_D6": "data 6",
	"CAN_GET_D7": "data 7",
	"CAN_SET_FILTER": "set filter for",
	"CAN_SET_FILTER_FROM": "from",
	"CAN_SET_FILTER_TO": "to",
	"CAN_SET_FILTER_TOOLTIP": "",
	"CAN_SET_FILTER_HELPURL": "Set a filter. Only messages that it's id match the filter are accepted.",
	"CAN_WRITE": "write to ",
	"CAN_WRITE_FRAME": "frame",
	"CAN_WRITE_TOOLTIP": "",
	"CAN_WRITE_HELPURL": "Send a frame to the CAN bus.",
	"CAN_SET": "set",
	"CAN_SET_TO_FRAME": "to frame",
	"CAN_SET_TO_VALUE": "value",
	"CAN_SET_TOOLTIP": "",
	"CAN_SET_HELPURL": "Set a frame field to an specified value.",	
	"CAN_SET_IDENTIFIER": "identifier", 
	"CAN_SET_TYPE": "type",
	"CAN_SET_LEN": "length",
	"CAN_SET_D0": "data 0",
	"CAN_SET_D1": "data 1",
	"CAN_SET_D2": "data 2",
	"CAN_SET_D3": "data 3",
	"CAN_SET_D4": "data 4",
	"CAN_SET_D5": "data 5",
	"CAN_SET_D6": "data 6",
	"CAN_SET_D7": "data 7",
	"CAN_STD": "standard",
	"CAN_EXT": "extended",
	"CAN_TYPE_TOOLTIP": "",
	"CAN_TYPE_HELPURL": "",
	"WARNING_CAN_INVALID_TYPE": "Invalid frame type",
	"WARNING_CAN_INVALID_DATA": "Invalid data. Must be >= 0 and <= 255.",
	"WARNING_CAN_INVALID_LEN": "Invalid length. Must be >= 0 and <= 8.",
	"UNARY_BITWISE_TOOLTIP": "",
	"UNARY_BITWISE_HELPURL": "",
	"BITWISE_TOOLTIP": "",
	"BITWISE_HELPURL": "",
	"air_quality": "Air quality",
	"other": "Other",
	"rotation": "Rotation",
	"REL_ROT_ENCODER": "Relative rotary encoder",
	"uv": "UV",
	"potentiometers": "Potentiometers",
	"illuminance": "Illuminance",
	"LINEAR_POT": "Linear pot",
	"ANALOG_JOYSTICK": "Analog joystick",

	"DEFAULT_CAN_FRAME": "frame",
	"NEW_CAN_FRAME": "New frame ...",
	"EDIT_CAN_FRAME_TITLE": "Edit frame ...",	
	"NEW_CAN_FRAME_TITLE": "New frame ...",
	"CAN_FRAME_CREATE": "Creeate frame ...",
	"CAN_FRAME_ALREADY_EXISTS": "An frame named '%1' already exists.",
	"CAN_FRAME_CANCEL": "Cancel",
	"CAN_FRAME_NAME": "Frame name",
	"RENAME_CAN_FRAME": "Rename frame...",
	"DELETE_CAN_FRAME": "Delete the '%1' frame",
	"CAN_FRAME_CANNOT_REMOVE": "This frame cannot remove.",
	"CAN_FRAME_CANNOT_RENAME": "This frame cannot rename.",
	"FOREVER": "forever",
	"EVENT_THREAD_TOOLTIP": "",
	"EVENT_THREAD_HELPURL": "",

	"LORA_ACTIVATION_DATA": "Node activation data:",
	"LORA_PERSONALIZATION_DATA": "Node personalization data:",
	"LORA_GET_DATA": "Get data ...",
	"LORA_GET_OTAA_DATA_HELP": "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an OTAA node. If you want to use it, please click the 'Get data' button to get the activation data.",
	"LORA_GET_ABP_DATA_HELP": "The Whitecat IDE offer to its users a TTN LoRa WAN application for test an ABP node. If you want to use it, please click the 'Get data' button to get the personalization data.",
	
	"MQTT_GET_DATA_HELP": "The Whitecat IDE offer to its users a MQTT broquer for testing purposes. If you want to use it, please click the 'Get data' button to get the connection data.",
	"MQTT_GET_DATA": "Get data ..."	,

	"CLOSE": "Close",

	"WARNING_RAISE_ERROR_AGAIN_NOT_ALLOWED_HERE": "Warning: This block may only be used within a 'try catch finally' block in its catch part.",
	"WARNING_CATCH_ERROR_NOT_ALLOWED_HERE": "Warning: This block may only be used within a 'when error is catched' block.",
	
	"OUTPUT_PINS": "output pin",
	"INPUT_PINS": "input pin",
	"ANALOG_PINS": "analog pin",
	"PWM_PINS": "pwm pin",

	"ONLY_ALLOWED_WITHIN_BLOCK": "Warning: This block may only be used within a \"%1\" block",
	"INTERNAL_HALL": "Internal hall effect sensor"
}